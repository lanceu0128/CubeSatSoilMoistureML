netcdf cyg08.ddmi.s20230531-000000-e20230531-235959.l1.power-brcs.a03.d63 {
dimensions:
	sample = 172303 ;
	ddm = 4 ;
	delay = 17 ;
	doppler = 11 ;
	lat_5km = 5 ;
	lon_5km = 5 ;
variables:
	int sample(sample) ;
		sample:long_name = "Sample index" ;
		sample:units = "1" ;
		sample:comment = "The netCDF coordinate variable associated with the sample dimension, which enumerates the zero-justified index range of the DDM time instants contained in the file." ;
	byte ddm(ddm) ;
		ddm:long_name = "DDM reflectometry channel" ;
		ddm:units = "1" ;
		ddm:comment = "The netCDF coordinate variable associated with variables that are dimensioned by the 4 DDMI reflectometry channels. It enumerates the zero-justified index range of DDM reflectometry channels. Ranges from 0 to 3." ;
	short spacecraft_id ;
		spacecraft_id:long_name = "CCSDS spacecraft identifier" ;
		spacecraft_id:units = "1" ;
		spacecraft_id:comment = "The CCSDS spacecraft identifier:\n\t0xF7 (247): CYGNSS 1\n\t0xF9 (249): CYGNSS 2\n\t0x2B ( 43): CYGNSS 3\n\t0x2C ( 44): CYGNSS 4\n\t0x2F ( 47): CYGNSS 5\n\t0x36 ( 54): CYGNSS 6\n\t0x37 ( 55): CYGNSS 7\n\t0x49 ( 73): CYGNSS 8\n\t0x00 (  0): end to end simulator\n\t0x0E ( 14): engineering model\n\t0x0D ( 15): default\n\t0xFF (255): unknown\n" ;
	byte spacecraft_num ;
		spacecraft_num:long_name = "CYGNSS spacecraft number" ;
		spacecraft_num:units = "1" ;
		spacecraft_num:valid_min = 1b ;
		spacecraft_num:valid_max = 99b ;
		spacecraft_num:comment = "The CYGNSS spacecraft number: Ranges from 1 through 8 and 99. 1 through 8 are on-orbit spacecraft. 99 is the CYGNSS end-to-end simulator" ;
	byte ddm_source ;
		ddm_source:long_name = "Level 0 data source" ;
		ddm_source:valid_range = 0b, 3b ;
		ddm_source:flag_values = 0b, 1b, 2b, 3b ;
		ddm_source:flag_meanings = "e2es gpss ddmi unknown" ;
		ddm_source:comment = "The source of the Level 0 DDM raw counts and metadata.\n0 = End-End Simulator (E2ES)\n1 = GPS signal simulator\n2 = CYGNSS spacecraft\n3 = Source unknown" ;
	byte ddm_time_type_selector ;
		ddm_time_type_selector:long_name = "DDM sample time type selector" ;
		ddm_time_type_selector:valid_range = 0b, 3b ;
		ddm_time_type_selector:flag_values = 0b, 1b, 2b, 3b ;
		ddm_time_type_selector:flag_meanings = "start middle end pvt" ;
		ddm_time_type_selector:comment = "Determines the position of ddm_timestamp_utc relative to the  DDM sampling period. Set to <Middle of DDM sampling period> for nominal science operations. Other settings are used for pre-launch testing only.\n0 = Start of DDM sampling period (used for pre-launch testing only)\n1 = Middle of DDM sampling period\n2 = End of DDM sampling period (used for testing pre-launch only)\n3 = pvt_timestamp_utc (used for testing pre-launch only)" ;
	float delay_resolution ;
		delay_resolution:long_name = "DDM delay bin resolution" ;
		delay_resolution:units = "1" ;
		delay_resolution:comment = "DDM delay bin resolution in chips. One chip is equal to 1/1,023,000 seconds." ;
	float dopp_resolution ;
		dopp_resolution:long_name = "DDM Doppler bin resolution" ;
		dopp_resolution:units = "s-1" ;
		dopp_resolution:comment = "DDM Doppler bin resolution in Hz" ;
	double ddm_timestamp_utc(sample) ;
		ddm_timestamp_utc:long_name = "DDM sample timestamp - UTC" ;
		ddm_timestamp_utc:standard_name = "time" ;
		ddm_timestamp_utc:calendar = "gregorian" ;
		ddm_timestamp_utc:comment = "DDM sample time. The number of seconds since time_coverage_start with nanosecond resolution. Its position relative to the DDM sampling period is determined by ddm_time_type_selector. Some metadata required for DDM calibration are generated relative to pvt_timestamp_utc or att_timestamp_utc. These metadata are interpolated to ddm_timestamp_utc before being used for DDM calibration. Note that the DDM sampling period is not synchronized with the UTC change of second and can occur at any time relative to the UTC change of second." ;
		ddm_timestamp_utc:units = "seconds since 2023-05-31 00:00:00.499261625" ;
	int ddm_timestamp_gps_week(sample) ;
		ddm_timestamp_gps_week:long_name = "DDM sample timestamp - GPS Week" ;
		ddm_timestamp_gps_week:units = "week" ;
		ddm_timestamp_gps_week:comment = "The GPS week number of ddm_timestamp_utc" ;
	double ddm_timestamp_gps_sec(sample) ;
		ddm_timestamp_gps_sec:long_name = "DDM sample timestamp - GPS Seconds" ;
		ddm_timestamp_gps_sec:units = "second" ;
		ddm_timestamp_gps_sec:comment = "The GPS second of week of ddm_timestamp_utc, with nanosecond resolution" ;
	double pvt_timestamp_utc(sample) ;
		pvt_timestamp_utc:long_name = "PVT timestamp - UTC" ;
		pvt_timestamp_utc:standard_name = "time" ;
		pvt_timestamp_utc:calendar = "gregorian" ;
		pvt_timestamp_utc:comment = "The spacecraft position and velocity epoch. The number of seconds since time_coverage_start with nanosecond resolution. This is the timestamp of the position and velocity reported by the DDMI. This is also the timestamp of the most recent GPS pulse per second." ;
		pvt_timestamp_utc:units = "seconds since 2023-05-31 00:00:00.499261625" ;
	int pvt_timestamp_gps_week(sample) ;
		pvt_timestamp_gps_week:long_name = "PVT timestamp - GPS Week" ;
		pvt_timestamp_gps_week:units = "week" ;
		pvt_timestamp_gps_week:comment = "The GPS week number of pvt_timestamp_utc" ;
	double pvt_timestamp_gps_sec(sample) ;
		pvt_timestamp_gps_sec:long_name = "PVT timestamp - GPS Seconds" ;
		pvt_timestamp_gps_sec:units = "second" ;
		pvt_timestamp_gps_sec:comment = "The GPS second of week of pvt_timestamp_utc, with nanosecond resolution." ;
	double att_timestamp_utc(sample) ;
		att_timestamp_utc:long_name = "Attitude timestamp - UTC" ;
		att_timestamp_utc:standard_name = "time" ;
		att_timestamp_utc:calendar = "gregorian" ;
		att_timestamp_utc:comment = "The spacecraft attitude epoch. The number of seconds since time_coverage_start with nanosecond resolution. This is the timestamp of the spacecraft attitude reported by the spacecraft attitude determinination system." ;
		att_timestamp_utc:units = "seconds since 2023-05-31 00:00:00.499261625" ;
	int att_timestamp_gps_week(sample) ;
		att_timestamp_gps_week:long_name = "Attitude timestamp - GPS Week" ;
		att_timestamp_gps_week:units = "week" ;
		att_timestamp_gps_week:comment = "The GPS week number of att_timestamp_utc" ;
	double att_timestamp_gps_sec(sample) ;
		att_timestamp_gps_sec:long_name = "Attitude timestamp - GPS Seconds" ;
		att_timestamp_gps_sec:units = "second" ;
		att_timestamp_gps_sec:comment = "The GPS second of week of att_timestamp_utc, with nanosecond resolution" ;
	int sc_pos_x(sample) ;
		sc_pos_x:long_name = "Spacecraft position X at DDM sample time" ;
		sc_pos_x:units = "meter" ;
		sc_pos_x:_FillValue = -99999999 ;
		sc_pos_x:comment = "The X component of the spacecraft WGS84 reference frame Earth-Centered Earth-Fixed (ECEF) position, in meters, at ddm_timestamp_utc" ;
	int sc_pos_y(sample) ;
		sc_pos_y:long_name = "Spacecraft position Y at DDM sample time" ;
		sc_pos_y:units = "meter" ;
		sc_pos_y:_FillValue = -99999999 ;
		sc_pos_y:comment = "The Y component of the spacecraft WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	int sc_pos_z(sample) ;
		sc_pos_z:long_name = "Spacecraft position Z at DDM sample time" ;
		sc_pos_z:units = "meter" ;
		sc_pos_z:_FillValue = -99999999 ;
		sc_pos_z:comment = "The Z component of the spacecraft WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	int sc_vel_x(sample) ;
		sc_vel_x:long_name = "Spacecraft velocity X at DDM sample time" ;
		sc_vel_x:units = "meter s-1" ;
		sc_vel_x:_FillValue = -9999 ;
		sc_vel_x:comment = "The X component of the spacecraft WGS84 reference frame ECEF velocity, in m/s, at ddm_timestamp_utc" ;
	int sc_vel_y(sample) ;
		sc_vel_y:long_name = "Spacecraft velocity Y at DDM sample time" ;
		sc_vel_y:units = "meter s-1" ;
		sc_vel_y:_FillValue = -9999 ;
		sc_vel_y:comment = "The Y component of the spacecraft WGS84 reference frame ECEF velocity, in m/s, at ddm_timestamp_utc" ;
	int sc_vel_z(sample) ;
		sc_vel_z:long_name = "Spacecraft velocity Z at DDM sample time" ;
		sc_vel_z:units = "meter s-1" ;
		sc_vel_z:_FillValue = -9999 ;
		sc_vel_z:comment = "The Z component of the spacecraft WGS84 reference frame ECEF velocity, in m/s, at ddm_timestamp_utc" ;
	int sc_pos_x_pvt(sample) ;
		sc_pos_x_pvt:long_name = "Spacecraft position X at PVT time" ;
		sc_pos_x_pvt:units = "meter" ;
		sc_pos_x_pvt:_FillValue = -99999999 ;
		sc_pos_x_pvt:comment = "The X component of the spacecraft WGS84 reference frame ECEF position, in meters, at pvt_timestamp_utc" ;
	int sc_pos_y_pvt(sample) ;
		sc_pos_y_pvt:long_name = "Spacecraft position Y at PVT time" ;
		sc_pos_y_pvt:units = "meter" ;
		sc_pos_y_pvt:_FillValue = -99999999 ;
		sc_pos_y_pvt:comment = "The Y component of the spacecraft WGS84 reference frame ECEF position, in meters, at pvt_timestamp_utc" ;
	int sc_pos_z_pvt(sample) ;
		sc_pos_z_pvt:long_name = "Spacecraft position Z at PVT time" ;
		sc_pos_z_pvt:units = "meter" ;
		sc_pos_z_pvt:_FillValue = -99999999 ;
		sc_pos_z_pvt:comment = "The Z component of the spacecraft WGS84 reference frame ECEF position, in meters, at pvt_timestamp_utc" ;
	int sc_vel_x_pvt(sample) ;
		sc_vel_x_pvt:long_name = "Spacecraft velocity X at PVT time" ;
		sc_vel_x_pvt:units = "meter s-1" ;
		sc_vel_x_pvt:_FillValue = -9999 ;
		sc_vel_x_pvt:comment = "The X component of the spacecraft WGS84 reference frame ECEF velocity, in m/s, at pvt_timestamp_utc" ;
	int sc_vel_y_pvt(sample) ;
		sc_vel_y_pvt:long_name = "Spacecraft velocity Y at PVT time" ;
		sc_vel_y_pvt:units = "meter s-1" ;
		sc_vel_y_pvt:_FillValue = -9999 ;
		sc_vel_y_pvt:comment = "The Y component of the spacecraft WGS84 reference frame ECEF velocity, in m/s, at pvt_timestamp_utc" ;
	int sc_vel_z_pvt(sample) ;
		sc_vel_z_pvt:long_name = "Spacecraft velocity Z at PVT time" ;
		sc_vel_z_pvt:units = "meter s-1" ;
		sc_vel_z_pvt:_FillValue = -9999 ;
		sc_vel_z_pvt:comment = "The Z component of the spacecraft WGS84 reference frame ECEF velocity, in m/s, at pvt_timestamp_utc" ;
	byte nst_att_status(sample) ;
		nst_att_status:long_name = "NST attitude status" ;
		nst_att_status:_FillValue = -99b ;
		nst_att_status:valid_range = 0b, 22b ;
		nst_att_status:flag_values = 0b, 1b, 2b, 3b, 4b, 5b, 6b, 7b, 8b, 9b, 10b, 11b, 12b, 13b, 14b, 15b, 16b, 17b, 18b, 19b, 20b, 21b, 22b ;
		nst_att_status:flag_meanings = "ok not_used2 bad too_few_stars quest_failed residuals_too_high too_close_to_edge pix_amp_too_low pix_amp_too_high backgnd_too_high track_failure pix_sum_too_low unused too_dim_for_starid too_many_groups too_few_groups channel_disabled track_blk_overlap ok_for_starid too_close_to_other too_many_pixels too_many_columns too_many_rows" ;
		nst_att_status:comment = "Nano Star Tracker attitude status as reported by the ADCS subsystem. Enumeration, with 0 indicating OK, and non-zero indicating an erroneous condition. Values:\n0  = ok\n1  = not_used2\n2  = bad\n3  = too_few_stars\n4  = quest_failed\n5  = residuals_too_high\n6  = too_close_to_edge\n7  = pix_amp_too_low\n8  = pix_amp_too_high\n9  = backgnd_too_high\n10 = track_failure\n11 = pix_sum_too_low\n12 = unused\n13 = too_dim_for_starid\n14 = too_many_groups\n15 = too_few_groups\n16 = channel_disabled\n17 = track_blk_overlap\n18 = ok_for_starid\n19 = too_close_to_other\n20 = too_many_pixels\n21 = too_many_columns\n22 = too_many_rows\n" ;
	float sc_roll(sample) ;
		sc_roll:long_name = "Spacecraft attitude roll angle at DDM sample time" ;
		sc_roll:units = "radian" ;
		sc_roll:_FillValue = -9999.f ;
		sc_roll:comment = "Spacecraft roll angle relative to the orbit frame, in radians at ddm_timestamp_utc" ;
	float sc_pitch(sample) ;
		sc_pitch:long_name = "Spacecraft attitude pitch angle at DDM sample time" ;
		sc_pitch:units = "radian" ;
		sc_pitch:_FillValue = -9999.f ;
		sc_pitch:comment = "Spacecraft pitch angle relative to the orbit frame, in radians at ddm_timestamp_utc" ;
	float sc_yaw(sample) ;
		sc_yaw:long_name = "Spacecraft attitude yaw angle at DDM sample time" ;
		sc_yaw:units = "radian" ;
		sc_yaw:_FillValue = -9999.f ;
		sc_yaw:comment = "Spacecraft yaw angle relative to the orbit frame, in radians at ddm_timestamp_utc" ;
	float sc_roll_att(sample) ;
		sc_roll_att:long_name = "Spacecraft attitude roll angle at attitude time" ;
		sc_roll_att:units = "radian" ;
		sc_roll_att:_FillValue = -9999.f ;
		sc_roll_att:comment = "Spacecraft roll angle relative to the orbit frame, in radians at att_timestamp_utc" ;
	float sc_pitch_att(sample) ;
		sc_pitch_att:long_name = "Spacecraft attitude pitch angle at attitude time" ;
		sc_pitch_att:units = "radian" ;
		sc_pitch_att:_FillValue = -9999.f ;
		sc_pitch_att:comment = "Spacecraft pitch angle relative to the orbit frame, in radians at att_timestamp_utc" ;
	float sc_yaw_att(sample) ;
		sc_yaw_att:long_name = "Spacecraft attitude yaw angle at attitude time" ;
		sc_yaw_att:units = "radian" ;
		sc_yaw_att:_FillValue = -9999.f ;
		sc_yaw_att:comment = "Spacecraft yaw angle relative to the orbit frame, in radians at att_timestamp_utc" ;
	float sc_lat(sample) ;
		sc_lat:long_name = "Sub-satellite point latitude" ;
		sc_lat:standard_name = "latitude" ;
		sc_lat:units = "degrees_north" ;
		sc_lat:_FillValue = -9999.f ;
		sc_lat:comment = "Subsatellite point latitude, in degrees North, at ddm_timestamp_utc" ;
	float sc_lon(sample) ;
		sc_lon:long_name = "Sub-satellite point longitude" ;
		sc_lon:standard_name = "longitude" ;
		sc_lon:units = "degrees_east" ;
		sc_lon:_FillValue = -9999.f ;
		sc_lon:comment = "Subsatellite point longitude, in degrees East, at ddm_timestamp_utc" ;
	int sc_alt(sample) ;
		sc_alt:long_name = "Spacecraft altitude" ;
		sc_alt:units = "meter" ;
		sc_alt:_FillValue = -9999 ;
		sc_alt:comment = "Spacecraft altitude above WGS-84 ellipsoid, in meters, at ddm_timestamp_utc" ;
	float commanded_sc_roll(sample) ;
		commanded_sc_roll:long_name = "Commanded spacecraft attitude roll angle" ;
		commanded_sc_roll:units = "radian" ;
		commanded_sc_roll:_FillValue = -9999.f ;
		commanded_sc_roll:comment = "Commanded spacecraft attitude roll angle, in radians at ddm_timestamp_utc. This value is updated every 10 seconds from the ENG_HI packet" ;
	float rx_clk_bias(sample) ;
		rx_clk_bias:long_name = "GPS receiver clock bias" ;
		rx_clk_bias:units = "meter" ;
		rx_clk_bias:_FillValue = -9999.f ;
		rx_clk_bias:comment = "The receiver clock bias (in seconds) multiplied by the speed of light as reported by the DDMI, interpolated to ddm_timestamp_utc, in meters." ;
	float rx_clk_bias_rate(sample) ;
		rx_clk_bias_rate:long_name = "GPS receiver clock bias rate" ;
		rx_clk_bias_rate:units = "meter s-1" ;
		rx_clk_bias_rate:_FillValue = -9999.f ;
		rx_clk_bias_rate:comment = "The receiver clock bias rate (in seconds/second) multiplied by the speed of light as reported by the DDMI, interpolated to ddm_timestamp_utc, in m/s." ;
	float rx_clk_bias_pvt(sample) ;
		rx_clk_bias_pvt:long_name = "GPS receiver clock bias at PVT time" ;
		rx_clk_bias_pvt:units = "meter" ;
		rx_clk_bias_pvt:_FillValue = -9999.f ;
		rx_clk_bias_pvt:comment = "The receiver clock bias (in seconds) multiplied by the speed of light as reported by the DDMI at pvt_timestamp_utc, in meters." ;
	float rx_clk_bias_rate_pvt(sample) ;
		rx_clk_bias_rate_pvt:long_name = "GPS receiver clock bias rate at PVT time" ;
		rx_clk_bias_rate_pvt:units = "meter s-1" ;
		rx_clk_bias_rate_pvt:_FillValue = -9999.f ;
		rx_clk_bias_rate_pvt:comment = "The receiver clock bias rate (in seconds/second) multiplied by the speed of light as reported by the DDMI, at pvt_timestamp_utc, in m/s." ;
	float lna_temp_nadir_starboard(sample) ;
		lna_temp_nadir_starboard:long_name = "Starboard antenna LNA temperature" ;
		lna_temp_nadir_starboard:units = "degree_Celsius" ;
		lna_temp_nadir_starboard:_FillValue = -9999.f ;
		lna_temp_nadir_starboard:comment = "The temperature of the starboard antenna low noise amplifier at ddm_timestamp_utc, in degrees C." ;
	float lna_temp_nadir_port(sample) ;
		lna_temp_nadir_port:long_name = "Port Antenna LNA temperature" ;
		lna_temp_nadir_port:units = "degree_Celsius" ;
		lna_temp_nadir_port:_FillValue = -9999.f ;
		lna_temp_nadir_port:comment = "The temperature of the port antenna low noise amplifier at ddm_timestamp_utc, in degrees C." ;
	float lna_temp_zenith(sample) ;
		lna_temp_zenith:long_name = "Zenith Antenna LNA temperature" ;
		lna_temp_zenith:units = "degree_Celsius" ;
		lna_temp_zenith:_FillValue = -9999.f ;
		lna_temp_zenith:comment = "The temperature of the zenith antenna low noise amplifier at ddm_timestamp_utc, in degrees C." ;
	int ddm_end_time_offset(sample) ;
		ddm_end_time_offset:long_name = "DDM end time offset" ;
		ddm_end_time_offset:units = "1e-9 s" ;
		ddm_end_time_offset:_FillValue = -9999 ;
		ddm_end_time_offset:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float bit_ratio_lo_hi_starboard(sample) ;
		bit_ratio_lo_hi_starboard:long_name = "Starboard low/high bit counter ratio" ;
		bit_ratio_lo_hi_starboard:units = "1" ;
		bit_ratio_lo_hi_starboard:_FillValue = -9999.f ;
		bit_ratio_lo_hi_starboard:comment = "Bin ratio of the of the starboard antenna defined as (plus_1_cnts + minus_1_cnts) / (plus_3_cnts + minus_3_cnts)." ;
	float bit_ratio_lo_hi_port(sample) ;
		bit_ratio_lo_hi_port:long_name = "Port low/high bit counter ratio" ;
		bit_ratio_lo_hi_port:units = "1" ;
		bit_ratio_lo_hi_port:_FillValue = -9999.f ;
		bit_ratio_lo_hi_port:comment = "Bin ratio of the of the port antenna defined as (plus_1_cnts + minus_1_cnts) / (plus_3_cnts + minus_3_cnts)." ;
	float bit_ratio_lo_hi_zenith(sample) ;
		bit_ratio_lo_hi_zenith:long_name = "Zenith low/high bit counter ratio" ;
		bit_ratio_lo_hi_zenith:units = "1" ;
		bit_ratio_lo_hi_zenith:_FillValue = -9999.f ;
		bit_ratio_lo_hi_zenith:comment = "Bin ratio of the of the zenith antenna defined as (plus_1_cnts + minus_1_cnts) / (plus_3_cnts + minus_3_cnts)." ;
	float bit_null_offset_starboard(sample) ;
		bit_null_offset_starboard:long_name = "Starboard bit count null offset" ;
		bit_null_offset_starboard:units = "1" ;
		bit_null_offset_starboard:_FillValue = -9999.f ;
		bit_null_offset_starboard:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float bit_null_offset_port(sample) ;
		bit_null_offset_port:long_name = "Port bit count null offset" ;
		bit_null_offset_port:units = "1" ;
		bit_null_offset_port:_FillValue = -9999.f ;
		bit_null_offset_port:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float bit_null_offset_zenith(sample) ;
		bit_null_offset_zenith:long_name = "Zenith bit count null offset" ;
		bit_null_offset_zenith:units = "1" ;
		bit_null_offset_zenith:_FillValue = -9999.f ;
		bit_null_offset_zenith:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	int status_flags_one_hz(sample) ;
		status_flags_one_hz:long_name = "1 Hz Status Flags" ;
		status_flags_one_hz:_FillValue = -9999 ;
		status_flags_one_hz:valid_range = 0, 15 ;
		status_flags_one_hz:flag_masks = 1, 2, 4, 8 ;
		status_flags_one_hz:flag_meanings = "milky_way_in_zenith_field_of_view sun_in_zenith_field_of_view sub_sat_pt_over_open_ocean sub_sat_pt_lat_ascending" ;
		status_flags_one_hz:comment = "One Hz status flags. These flags apply to all four DDMs. 1 indicates presence of condition. Flag masks:\n1 = Milky way in zenith antenna field of view\n2 = Sun in zenith antenna field of view\n4 = Sub-satellite point over open ocean\n8 = Sub-satellite point latitude ascending, i.e. sc_lat has increased since the previous DDM sample" ;
	byte prn_code(sample, ddm) ;
		prn_code:long_name = "GPS PRN code" ;
		prn_code:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		prn_code:units = "1" ;
		prn_code:_FillValue = -99b ;
		prn_code:valid_min = 0b ;
		prn_code:valid_max = 32b ;
		prn_code:comment = "The PRN code of the GPS signal associated with the DDM. Ranges from 0 to 32. 0 = reflectometry channel idle. 1 through 32 = GPS PRN codes." ;
	int sv_num(sample, ddm) ;
		sv_num:long_name = "GPS Space Vehicle Number" ;
		sv_num:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sv_num:units = "1" ;
		sv_num:_FillValue = -9999 ;
		sv_num:comment = "The GPS unique space vehicle number that transmitted prn_code." ;
	int track_id(sample, ddm) ;
		track_id:long_name = "DDM Track ID" ;
		track_id:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		track_id:units = "1" ;
		track_id:_FillValue = -9999 ;
		track_id:comment = "A track is a temporally contiguous series of DDMs that have the same prn_code. Each track in the file is assigned a unique track_id starting with one. track_id ranges from 1 to N, where N is the total number of tracks in the file." ;
	byte ddm_ant(sample, ddm) ;
		ddm_ant:long_name = "DDM Antenna" ;
		ddm_ant:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_ant:_FillValue = -99b ;
		ddm_ant:valid_range = 0b, 3b ;
		ddm_ant:flag_values = 0b, 1b, 2b, 3b ;
		ddm_ant:flag_meanings = "none zenith nadir_starboard nadir_port" ;
		ddm_ant:comment = "The antenna that received the reflected GPS signal associated with the DDM.\n0 = none\n1 = zenith (never used)\n2 = nadir_starboard\n3 = nadir_port" ;
	float zenith_code_phase(sample, ddm) ;
		zenith_code_phase:long_name = "Zenith signal code phase" ;
		zenith_code_phase:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		zenith_code_phase:units = "1" ;
		zenith_code_phase:_FillValue = -9999.f ;
		zenith_code_phase:comment = "The DDMI-measured code phase of the direct GPS signal for prn_code interpolated to ddm_timestamp_utc. 0 <= zenith_code_phase < 1023.0." ;
	float sp_ddmi_delay_correction(sample, ddm) ;
		sp_ddmi_delay_correction:long_name = "Correction to DDMI specular point delay" ;
		sp_ddmi_delay_correction:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_ddmi_delay_correction:units = "1" ;
		sp_ddmi_delay_correction:_FillValue = -9999.f ;
		sp_ddmi_delay_correction:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float sp_ddmi_dopp_correction(sample, ddm) ;
		sp_ddmi_dopp_correction:long_name = "Correction to DDMI specular point Doppler" ;
		sp_ddmi_dopp_correction:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_ddmi_dopp_correction:units = "s-1" ;
		sp_ddmi_dopp_correction:_FillValue = -9999.f ;
		sp_ddmi_dopp_correction:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float add_range_to_sp(sample, ddm) ;
		add_range_to_sp:long_name = "Additional range to specular point at DDM sample time" ;
		add_range_to_sp:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		add_range_to_sp:units = "1" ;
		add_range_to_sp:_FillValue = -9999.f ;
		add_range_to_sp:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float add_range_to_sp_pvt(sample, ddm) ;
		add_range_to_sp_pvt:long_name = "Additional range to specular point at PVT time" ;
		add_range_to_sp_pvt:units = "1" ;
		add_range_to_sp_pvt:_FillValue = -9999.f ;
		add_range_to_sp_pvt:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float sp_ddmi_dopp(sample, ddm) ;
		sp_ddmi_dopp:long_name = "DDMI Doppler at specular point" ;
		sp_ddmi_dopp:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_ddmi_dopp:units = "s-1" ;
		sp_ddmi_dopp:_FillValue = -9999.f ;
		sp_ddmi_dopp:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float sp_fsw_delay(sample, ddm) ;
		sp_fsw_delay:long_name = "Flight software specular point delay" ;
		sp_fsw_delay:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_fsw_delay:units = "1" ;
		sp_fsw_delay:_FillValue = -9999.f ;
		sp_fsw_delay:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float sp_delay_error(sample, ddm) ;
		sp_delay_error:long_name = "Flight software specular point delay error" ;
		sp_delay_error:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_delay_error:units = "1" ;
		sp_delay_error:_FillValue = -9999.f ;
		sp_delay_error:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float sp_dopp_error(sample, ddm) ;
		sp_dopp_error:long_name = "Flight software specular point Doppler error" ;
		sp_dopp_error:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_dopp_error:units = "s-1" ;
		sp_dopp_error:_FillValue = -9999.f ;
		sp_dopp_error:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float fsw_comp_delay_shift(sample, ddm) ;
		fsw_comp_delay_shift:long_name = "Flight software DDM compression delay shift" ;
		fsw_comp_delay_shift:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		fsw_comp_delay_shift:units = "1" ;
		fsw_comp_delay_shift:_FillValue = -9999.f ;
		fsw_comp_delay_shift:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	float fsw_comp_dopp_shift(sample, ddm) ;
		fsw_comp_dopp_shift:long_name = "Flight software DDM compression Doppler shift" ;
		fsw_comp_dopp_shift:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		fsw_comp_dopp_shift:units = "s-1" ;
		fsw_comp_dopp_shift:_FillValue = -9999.f ;
		fsw_comp_dopp_shift:comment = "For diagnostic use only. See UM document 148-0372 CYGNSS L1 netCDF Diagnostic Variables for more information." ;
	byte prn_fig_of_merit(sample, ddm) ;
		prn_fig_of_merit:long_name = "PRN selection figure of Merit" ;
		prn_fig_of_merit:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		prn_fig_of_merit:units = "1" ;
		prn_fig_of_merit:_FillValue = -99b ;
		prn_fig_of_merit:comment = "The RCG Figure of Merit (FOM) for the DDM. Ranges from 0 through 15.The DDMI selects the four strongest specular points (SP) for DDM production. It ranks the strength of SPs using an antenna RCG map. The map converts the position of the SP in antenna azimuth and declination angles to an RCG FOM. 0 represents the least FOM value. 15 represents the greatest FOM value." ;
	float tx_clk_bias(sample, ddm) ;
		tx_clk_bias:long_name = "GPS transmitter clock bias" ;
		tx_clk_bias:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_clk_bias:units = "meter" ;
		tx_clk_bias:_FillValue = -9999.f ;
		tx_clk_bias:comment = "The GPS spacecraft (sv_num) clock time minus GPS constellation time (in seconds) times the speed of light, in meters." ;
	float sp_lat(sample, ddm) ;
		sp_lat:long_name = "Specular point latitude" ;
		sp_lat:standard_name = "latitude" ;
		sp_lat:units = "degrees_north" ;
		sp_lat:_FillValue = -9999.f ;
		sp_lat:comment = "Specular point latitude, in degrees North, at ddm_timestamp_utc" ;
	float sp_lon(sample, ddm) ;
		sp_lon:long_name = "Specular point longitude" ;
		sp_lon:standard_name = "longitude" ;
		sp_lon:units = "degrees_east" ;
		sp_lon:_FillValue = -9999.f ;
		sp_lon:comment = "Specular point longitude, in degrees East, at ddm_timestamp_utc" ;
	float sp_alt(sample, ddm) ;
		sp_alt:long_name = "Specular point altitude" ;
		sp_alt:standard_name = "altitude" ;
		sp_alt:units = "meter" ;
		sp_alt:_FillValue = -9999.f ;
		sp_alt:comment = "Altitude of the specular point relative to the WGS 84 datum in meters, at ddm_timestamp_utc, as calculated on the ground. Note that an approximated DTU10 mean sea surface height model is used to calculate the specular point altitude." ;
	int sp_pos_x(sample, ddm) ;
		sp_pos_x:long_name = "Specular point position X" ;
		sp_pos_x:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_pos_x:units = "meter" ;
		sp_pos_x:_FillValue = -99999999 ;
		sp_pos_x:comment = "The X component of the specular point position in the ECEF coordinate system, in meters, at ddm_timestamp_utc, as calculated on the ground." ;
	int sp_pos_y(sample, ddm) ;
		sp_pos_y:long_name = "Specular point position Y" ;
		sp_pos_y:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_pos_y:units = "meter" ;
		sp_pos_y:_FillValue = -99999999 ;
		sp_pos_y:comment = "The Y component of the specular point position in the ECEF coordinate system, in meters, at ddm_timestamp_utc, as calculated on the ground." ;
	int sp_pos_z(sample, ddm) ;
		sp_pos_z:long_name = "Specular point position Z" ;
		sp_pos_z:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_pos_z:units = "meter" ;
		sp_pos_z:_FillValue = -99999999 ;
		sp_pos_z:comment = "The Z component of the specular point position in the ECEF coordinate system, in meters, at ddm_timestamp_utc, as calculated on the ground." ;
	int sp_vel_x(sample, ddm) ;
		sp_vel_x:long_name = "Specular point velocity X" ;
		sp_vel_x:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_vel_x:units = "meter s-1" ;
		sp_vel_x:_FillValue = -9999 ;
		sp_vel_x:comment = "The X component of the specular point velocity in the ECEF coordinate system, in m/s, at ddm_timestamp_utc, as calculated on the ground." ;
	int sp_vel_y(sample, ddm) ;
		sp_vel_y:long_name = "Specular point velocity Y" ;
		sp_vel_y:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_vel_y:units = "meter s-1" ;
		sp_vel_y:_FillValue = -9999 ;
		sp_vel_y:comment = "The Y component of the specular point velocity in the ECEF coordinate system, in m/s, at ddm_timestamp_utc, as calculated on the ground." ;
	int sp_vel_z(sample, ddm) ;
		sp_vel_z:long_name = "Specular point velocity Z" ;
		sp_vel_z:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_vel_z:units = "meter s-1" ;
		sp_vel_z:_FillValue = -9999 ;
		sp_vel_z:comment = "The Z component of the specular point velocity in the ECEF coordinate system, in m/s, at ddm_timestamp_utc, as calculated on the ground." ;
	float sp_inc_angle(sample, ddm) ;
		sp_inc_angle:long_name = "Specular point incidence angle" ;
		sp_inc_angle:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_inc_angle:units = "degree" ;
		sp_inc_angle:_FillValue = -9999.f ;
		sp_inc_angle:comment = "The specular point incidence angle, in degrees, at ddm_timestamp_utc. This is the angle between the line normal to the Earth\'s surface at the specular point and the line extending from the specular point to the spacecraft. See UM Doc. 148-0336, CYGNSS Science Data Processing Coordinate Systems Definitions." ;
	float sp_theta_orbit(sample, ddm) ;
		sp_theta_orbit:long_name = "Specular point orbit frame theta angle" ;
		sp_theta_orbit:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_theta_orbit:units = "degree" ;
		sp_theta_orbit:_FillValue = -9999.f ;
		sp_theta_orbit:comment = "The angle between the orbit frame +Z axis and the line extending from the spacecraft to the specular point, in degrees, at ddm_timestamp_utc. See UM Doc. 148-0336, CYGNSS Science Data Processing Coordinate Systems Definitions." ;
	float sp_az_orbit(sample, ddm) ;
		sp_az_orbit:long_name = "Specular point orbit frame azimuth angle" ;
		sp_az_orbit:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_az_orbit:units = "degree" ;
		sp_az_orbit:_FillValue = -9999.f ;
		sp_az_orbit:comment = "Let line A be the line that extends from the spacecraft to the specular point at ddm_timestamp_utc. Let line B be the projection of line A onto the orbit frame XY plane. sp_az_orbit is the angle between the orbit frame +X axis (the velocity vector) and line B, in degrees, at ddm_timestamp_utc. See UM Doc. 148-0336, CYGNSS Science Data Processing Coordinate Systems Definitions." ;
	float sp_theta_body(sample, ddm) ;
		sp_theta_body:long_name = "Specular point body frame theta angle" ;
		sp_theta_body:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_theta_body:units = "degree" ;
		sp_theta_body:_FillValue = -9999.f ;
		sp_theta_body:comment = "The angle between the spacecraft body frame +Z axis and the line extending from the spacecraft to the specular point, in degrees, at ddm_timestamp_utc. See UM Doc. 148-0336, CYGNSS Science Data Processing Coordinate Systems Definitions." ;
	float sp_az_body(sample, ddm) ;
		sp_az_body:long_name = "Specular point body frame azimuth angle" ;
		sp_az_body:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_az_body:units = "degree" ;
		sp_az_body:_FillValue = -9999.f ;
		sp_az_body:comment = "Let line A be the line that extends from the spacecraft to the specular point, at ddm_timestamp_utc. Let line B be the projection of line A onto the spacecraft body frame XY plane. sp_az_body is the angle between the spacecraft body frame +X axis and line B, in degrees, at ddm_timestamp_utc. See UM Doc. 148-0336, CYGNSS Science Data Processing Coordinate Systems Definitions." ;
	float sp_rx_gain(sample, ddm) ;
		sp_rx_gain:long_name = "Specular point Rx antenna gain" ;
		sp_rx_gain:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_rx_gain:units = "dBi" ;
		sp_rx_gain:_FillValue = -9999.f ;
		sp_rx_gain:comment = "The receive antenna gain in the direction of the specular point, in dBi, at ddm_timestamp_utc." ;
	float gps_eirp(sample, ddm) ;
		gps_eirp:long_name = "GPS effective isotropic radiated power" ;
		gps_eirp:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		gps_eirp:units = "watt" ;
		gps_eirp:_FillValue = -9999.f ;
		gps_eirp:comment = "The estimated effective isotropic RF power (EIRP) of the L1 C/A code signal within ± 1 MHz of the L1 carrier radiated by space vehicle, sv_num, in the direction of the specular point, in Watts, at ddm_timestamp_utc. Variations in GPS transmit power are tracked by the direct signal power measured by the navigation receiver. One second samples are smoothed by a ± 10 second running average." ;
	float static_gps_eirp(sample, ddm) ;
		static_gps_eirp:long_name = "Static GPS effective isotropic radiated power" ;
		static_gps_eirp:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		static_gps_eirp:units = "watt" ;
		static_gps_eirp:_FillValue = -9999.f ;
		static_gps_eirp:comment = "Heritage version of gps_eirp (v2.1 and earlier) that assumed a static value for the power level of the L1 signal transmitted by the GPS satellite, prior to implementation of dynamic gps_eirp monitoring in August 2018." ;
	float gps_tx_power_db_w(sample, ddm) ;
		gps_tx_power_db_w:long_name = "GPS SV transmit power" ;
		gps_tx_power_db_w:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		gps_tx_power_db_w:units = "dBW" ;
		gps_tx_power_db_w:_FillValue = -9999.f ;
		gps_tx_power_db_w:comment = "Power input to SV Tx antenna. Referenced from the heritage version of gps_eirp (v2.1 and earlier)." ;
	float gps_ant_gain_db_i(sample, ddm) ;
		gps_ant_gain_db_i:long_name = "GPS SV transmit antenna gain" ;
		gps_ant_gain_db_i:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		gps_ant_gain_db_i:units = "dBi" ;
		gps_ant_gain_db_i:_FillValue = -9999.f ;
		gps_ant_gain_db_i:comment = "SV antenna gain in the direction of the specular point. Referenced from the heritage version of gps_eirp (v2.1 and earlier)." ;
	float gps_off_boresight_angle_deg(sample, ddm) ;
		gps_off_boresight_angle_deg:long_name = "GPS off boresight angle" ;
		gps_off_boresight_angle_deg:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		gps_off_boresight_angle_deg:units = "degree" ;
		gps_off_boresight_angle_deg:_FillValue = -9999.f ;
		gps_off_boresight_angle_deg:comment = "SV antenna off boresight angle in the direction of the specular point" ;
	float ddm_snr(sample, ddm) ;
		ddm_snr:long_name = "DDM signal to noise ratio" ;
		ddm_snr:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_snr:units = "dB" ;
		ddm_snr:_FillValue = -9999.f ;
		ddm_snr:comment = "10log(Smax/Navg), where Smax is the maximum value (in raw counts) in a single DDM bin and Navg is the the average per-bin raw noise counts. ddm_snr is in dB, at ddm_timestamp_utc." ;
	float ddm_noise_floor(sample, ddm) ;
		ddm_noise_floor:long_name = "DDM noise floor" ;
		ddm_noise_floor:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_noise_floor:units = "1" ;
		ddm_noise_floor:_FillValue = -9999.f ;
		ddm_noise_floor:comment = "For non-black-body DDMs: Is equal to the average bin raw counts in the first 45 delay rows of the uncompressed 20 x 128 DDM, in counts, at ddm_timestamp_utc. For black body DDMs: Is equal to the average bin raw counts in all 128 delay rows of the uncompressed 20 x 128 DDM, in counts, at ddm_timestamp_utc." ;
	float inst_gain(sample, ddm) ;
		inst_gain:long_name = "Instrument gain" ;
		inst_gain:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		inst_gain:units = "1" ;
		inst_gain:_FillValue = -9999.f ;
		inst_gain:comment = "The black body noise counts divided by the sum of the black body power and the instrument noise power, in count/W, at ddm_timestamp_utc." ;
	float lna_noise_figure(sample, ddm) ;
		lna_noise_figure:long_name = "LNA noise figure" ;
		lna_noise_figure:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		lna_noise_figure:units = "dB" ;
		lna_noise_figure:_FillValue = -9999.f ;
		lna_noise_figure:comment = "The low noise amplifier (LNA) noise figure, in dB, at ddm_timestamp_utc. Estimated from pre-launch characterization of LNA performance as a function of LNA temperature." ;
	int rx_to_sp_range(sample, ddm) ;
		rx_to_sp_range:long_name = "Rx to specular point range" ;
		rx_to_sp_range:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		rx_to_sp_range:units = "meter" ;
		rx_to_sp_range:_FillValue = -9999 ;
		rx_to_sp_range:comment = "The distance between the CYGNSS spacecraft and the specular point, in meters, at ddm_timestamp_utc." ;
	int tx_to_sp_range(sample, ddm) ;
		tx_to_sp_range:long_name = "Tx to specular point range" ;
		tx_to_sp_range:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_to_sp_range:units = "meter" ;
		tx_to_sp_range:_FillValue = -9999 ;
		tx_to_sp_range:comment = "The distance between the GPS satellite and the specular point, in meters, at ddm_timestamp_utc." ;
	int tx_pos_x(sample, ddm) ;
		tx_pos_x:long_name = "GPS Tx position X" ;
		tx_pos_x:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_pos_x:units = "meter" ;
		tx_pos_x:_FillValue = -99999999 ;
		tx_pos_x:comment = "The X component of the GPS spacecraft WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	int tx_pos_y(sample, ddm) ;
		tx_pos_y:long_name = "GPS Tx position Y" ;
		tx_pos_y:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_pos_y:units = "meter" ;
		tx_pos_y:_FillValue = -99999999 ;
		tx_pos_y:comment = "The Y component of the GPS spacecraft WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	int tx_pos_z(sample, ddm) ;
		tx_pos_z:long_name = "GPS Tx position Z" ;
		tx_pos_z:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_pos_z:units = "meter" ;
		tx_pos_z:_FillValue = -99999999 ;
		tx_pos_z:comment = "The Z component of the GPS spacecraft WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	int tx_vel_x(sample, ddm) ;
		tx_vel_x:long_name = "GPS Tx velocity X" ;
		tx_vel_x:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_vel_x:units = "meter s-1" ;
		tx_vel_x:_FillValue = -9999 ;
		tx_vel_x:comment = "The X component of the GPS spacecraft WGS84 reference frame ECEF velocity in meters, at ddm_timestamp_utc" ;
	int tx_vel_y(sample, ddm) ;
		tx_vel_y:long_name = "GPS Tx velocity Y" ;
		tx_vel_y:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_vel_y:units = "meter s-1" ;
		tx_vel_y:_FillValue = -9999 ;
		tx_vel_y:comment = "The Y component of the GPS spacecraft WGS84 reference frame ECEF velocity in meters, at ddm_timestamp_utc" ;
	int tx_vel_z(sample, ddm) ;
		tx_vel_z:long_name = "GPS Tx velocity Z" ;
		tx_vel_z:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_vel_z:units = "meter s-1" ;
		tx_vel_z:_FillValue = -9999 ;
		tx_vel_z:comment = "The Z component of the GPS spacecraft WGS84 reference frame ECEF velocity in meters, at ddm_timestamp_utc" ;
	float bb_nearest(sample, ddm) ;
		bb_nearest:long_name = "Time to most recent black body reading" ;
		bb_nearest:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_nearest:units = "second" ;
		bb_nearest:_FillValue = -9999.f ;
		bb_nearest:comment = "The time between ddm_timestamp_utc and the ddm_timestamp_utc associated with the closest (in time) black body reading, in signed seconds. A positive value indicates that the black body reading occurred after ddm_timestamp_utc. A negative value indicates that the block body reading occurred before ddm_timestamp_utc." ;
	float fresnel_coeff(sample, ddm) ;
		fresnel_coeff:long_name = "Fresnel power reflection coefficient at specular point" ;
		fresnel_coeff:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		fresnel_coeff:units = "1" ;
		fresnel_coeff:_FillValue = -9999.f ;
		fresnel_coeff:comment = "The SQUARE of the left hand circularly polarized Fresnel electromagnetic voltage reflection coefficient at 1575 MHz for a smooth ocean surface at the specular point location and incidence angle. See UM document 148-0361 Fresnel Coefficient Calculation for more information." ;
	float ddm_nbrcs(sample, ddm) ;
		ddm_nbrcs:long_name = "Normalized BRCS" ;
		ddm_nbrcs:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_nbrcs:units = "1" ;
		ddm_nbrcs:_FillValue = -9999.f ;
		ddm_nbrcs:comment = "Normalized BRCS over an interpolated 3 delay x 5 Doppler region around the precise inter-bin specular point location [2]. The specular point bin is in the top (least delay) row and the center Doppler column of the 3 x 5 box. This value is computed only over the ocean due to the high confidence in the ocean specular point location. For land NBRCS values use ddm_nbrcs_center and ddm_nbrcs_peak." ;
	float ddm_nbrcs_scale_factor(sample, ddm) ;
		ddm_nbrcs_scale_factor:long_name = "Normalized BRCS Scale Factor" ;
		ddm_nbrcs_scale_factor:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_nbrcs_scale_factor:units = "1" ;
		ddm_nbrcs_scale_factor:_FillValue = -9999.f ;
		ddm_nbrcs_scale_factor:comment = "Scale factor applied to the ddm_nbrcs during the statistical de-biasing process." ;
	float ddm_les(sample, ddm) ;
		ddm_les:long_name = "Leading edge slope" ;
		ddm_les:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_les:units = "1" ;
		ddm_les:_FillValue = -9999.f ;
		ddm_les:comment = "Leading edge slope of a 3 delay x 5 Doppler bin box that include the specular point bin. The specular point bin is in the top (least delay) row and the center Doppler column of the 3 x 5 box." ;
	float nbrcs_scatter_area(sample, ddm) ;
		nbrcs_scatter_area:long_name = "NBRCS scattering area" ;
		nbrcs_scatter_area:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		nbrcs_scatter_area:units = "meter2" ;
		nbrcs_scatter_area:_FillValue = -9999.f ;
		nbrcs_scatter_area:comment = "The scattering area of the 3 x 5 region of the ddm used to calculate ddm_nbrcs." ;
	float les_scatter_area(sample, ddm) ;
		les_scatter_area:long_name = "LES scattering area" ;
		les_scatter_area:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		les_scatter_area:units = "meter2" ;
		les_scatter_area:_FillValue = -9999.f ;
		les_scatter_area:comment = "The scattering area of the 3 x 5 region of the ddm used to calculate ddm_les." ;
	byte brcs_ddm_peak_bin_delay_row(sample, ddm) ;
		brcs_ddm_peak_bin_delay_row:long_name = "BRCS DDM peak bin delay row" ;
		brcs_ddm_peak_bin_delay_row:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		brcs_ddm_peak_bin_delay_row:units = "1" ;
		brcs_ddm_peak_bin_delay_row:_FillValue = -99b ;
		brcs_ddm_peak_bin_delay_row:comment = "The zero-based delay row of the peak value in the bistatic radar cross section DDM (brcs). Ranges from 0 to 16." ;
	byte brcs_ddm_peak_bin_dopp_col(sample, ddm) ;
		brcs_ddm_peak_bin_dopp_col:long_name = "BRCS DDM peak bin Doppler column" ;
		brcs_ddm_peak_bin_dopp_col:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		brcs_ddm_peak_bin_dopp_col:units = "1" ;
		brcs_ddm_peak_bin_dopp_col:_FillValue = -99b ;
		brcs_ddm_peak_bin_dopp_col:comment = "The zero-based Doppler column of the peak value in the bistatic radar cross section DDM (brcs). Ranges from 0 to 10." ;
	float brcs_ddm_sp_bin_delay_row(sample, ddm) ;
		brcs_ddm_sp_bin_delay_row:long_name = "BRCS DDM specular point bin delay row" ;
		brcs_ddm_sp_bin_delay_row:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		brcs_ddm_sp_bin_delay_row:units = "1" ;
		brcs_ddm_sp_bin_delay_row:_FillValue = -9999.f ;
		brcs_ddm_sp_bin_delay_row:comment = "The zero-based delay row of the specular point delay in the bistatic radar cross section DDM (brcs). Note that this is a floating point value." ;
	float brcs_ddm_sp_bin_dopp_col(sample, ddm) ;
		brcs_ddm_sp_bin_dopp_col:long_name = "BRCS DDM specular point bin Doppler column" ;
		brcs_ddm_sp_bin_dopp_col:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		brcs_ddm_sp_bin_dopp_col:units = "1" ;
		brcs_ddm_sp_bin_dopp_col:_FillValue = -9999.f ;
		brcs_ddm_sp_bin_dopp_col:comment = "The zero-based Doppler column of the specular point Doppler in the bistatic radar cross section DDM (brcs). Note that this is a floating point value." ;
	float ddm_brcs_uncert(sample, ddm) ;
		ddm_brcs_uncert:long_name = "DDM BRCS uncertainty" ;
		ddm_brcs_uncert:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_brcs_uncert:units = "1" ;
		ddm_brcs_uncert:_FillValue = -9999.f ;
		ddm_brcs_uncert:comment = "Uncertainty of the BRCS" ;
	float comp_ddm_sp_delay_row(sample, ddm) ;
		comp_ddm_sp_delay_row:long_name = "Compressed DDM specular point bin delay row" ;
		comp_ddm_sp_delay_row:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		comp_ddm_sp_delay_row:units = "1" ;
		comp_ddm_sp_delay_row:_FillValue = -9999.f ;
		comp_ddm_sp_delay_row:comment = "TBD" ;
	float comp_ddm_sp_doppler_col(sample, ddm) ;
		comp_ddm_sp_doppler_col:long_name = "Compressed DDM specular point bin Doppler column" ;
		comp_ddm_sp_doppler_col:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		comp_ddm_sp_doppler_col:units = "1" ;
		comp_ddm_sp_doppler_col:_FillValue = -9999.f ;
		comp_ddm_sp_doppler_col:comment = "TBD" ;
	float bb_power_temperature_density(sample, ddm) ;
		bb_power_temperature_density:long_name = "Black Body Power Temperature Density" ;
		bb_power_temperature_density:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_power_temperature_density:units = "Counts/Kelvin" ;
		bb_power_temperature_density:_FillValue = -9999.f ;
		bb_power_temperature_density:comment = "Raw counts of detected power radiated by the blackbody calibration target, divided by receiver gain and blackbody physical temperature in Kelvins, gives the detected power per unit absolute temperature." ;
	float ddm_nadir_signal_correction(sample, ddm) ;
		ddm_nadir_signal_correction:long_name = "Nadir Signal Correction Factor" ;
		ddm_nadir_signal_correction:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_nadir_signal_correction:units = "1" ;
		ddm_nadir_signal_correction:_FillValue = -9999.f ;
		ddm_nadir_signal_correction:comment = "The correction factor applied to signal value based on the nadir bin ratio." ;
	float ddm_nadir_bb_correction_prev(sample, ddm) ;
		ddm_nadir_bb_correction_prev:long_name = "Nadir BB Correction Factor Previous" ;
		ddm_nadir_bb_correction_prev:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_nadir_bb_correction_prev:units = "1" ;
		ddm_nadir_bb_correction_prev:_FillValue = -9999.f ;
		ddm_nadir_bb_correction_prev:comment = "The correction factor applied to the previous blackbody value based on the nadir bin ratio." ;
	float ddm_nadir_bb_correction_next(sample, ddm) ;
		ddm_nadir_bb_correction_next:long_name = "Nadir BB Correction Factor Next" ;
		ddm_nadir_bb_correction_next:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_nadir_bb_correction_next:units = "1" ;
		ddm_nadir_bb_correction_next:_FillValue = -9999.f ;
		ddm_nadir_bb_correction_next:comment = "The correction factor applied to the next blackbody value based on the nadir bin ratio." ;
	float zenith_sig_i2q2(sample, ddm) ;
		zenith_sig_i2q2:long_name = "Zenith Signal I2Q2" ;
		zenith_sig_i2q2:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		zenith_sig_i2q2:units = "1" ;
		zenith_sig_i2q2:_FillValue = -9999.f ;
		zenith_sig_i2q2:comment = "Raw counts of detected power in direct GPS L1 C/A signal received by zenith navigation antenna and detected by navigation receiver." ;
	float zenith_sig_i2q2_corrected(sample, ddm) ;
		zenith_sig_i2q2_corrected:long_name = "Zenith Signal I2Q2 Corrected" ;
		zenith_sig_i2q2_corrected:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		zenith_sig_i2q2_corrected:units = "1" ;
		zenith_sig_i2q2_corrected:_FillValue = -9999.f ;
		zenith_sig_i2q2_corrected:comment = "The zenith_sig_i2q2 after a correction factor, based on the zenith antenna bin ratio, has been applied." ;
	float zenith_sig_i2q2_mult_correction(sample, ddm) ;
		zenith_sig_i2q2_mult_correction:long_name = "Zenith Signal I2Q2 Multiplicative Correction Factor" ;
		zenith_sig_i2q2_mult_correction:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		zenith_sig_i2q2_mult_correction:units = "1" ;
		zenith_sig_i2q2_mult_correction:_FillValue = -9999.f ;
		zenith_sig_i2q2_mult_correction:comment = "The multiplicative correction factor applied with zenith_sig_i2q2_corrected = 10*log10(zenith_sig_i2q2*zenith_sig_i2q2_mult_correction)-zenith_sig_i2q2_add_correction." ;
	float zenith_sig_i2q2_add_correction(sample, ddm) ;
		zenith_sig_i2q2_add_correction:long_name = "Zenith Signal I2 Q2 additive correction factor" ;
		zenith_sig_i2q2_add_correction:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		zenith_sig_i2q2_add_correction:units = "1" ;
		zenith_sig_i2q2_add_correction:_FillValue = -9999.f ;
		zenith_sig_i2q2_add_correction:comment = "The additive correction factor applied with zenith_sig_i2q2_corrected = 10*log10(zenith_sig_i2q2*zenith_sig_i2q2_mult_correction)-zenith_sig_i2q2_add_correction." ;
	int starboard_gain_setting(sample) ;
		starboard_gain_setting:long_name = "The Nadir-Starboard Gain Setting" ;
		starboard_gain_setting:units = "dB" ;
		starboard_gain_setting:_FillValue = -9999 ;
		starboard_gain_setting:comment = "The Nadir-Starboard Gain Setting (dB, 0=Automatic)" ;
	int port_gain_setting(sample) ;
		port_gain_setting:long_name = "The Nadir-Port Gain Setting" ;
		port_gain_setting:units = "dB" ;
		port_gain_setting:_FillValue = -9999 ;
		port_gain_setting:comment = "The Nadir-Port Gain Setting (dB, 0=Automatic)" ;
	float ddm_kurtosis(sample, ddm) ;
		ddm_kurtosis:long_name = "DDM kurtosis" ;
		ddm_kurtosis:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_kurtosis:units = "1" ;
		ddm_kurtosis:_FillValue = -9999.f ;
		ddm_kurtosis:comment = "The kurtosis of the DDM noise floor. For diagnostic use only. See UM document 148-0347 DDM RFI Algorithm for more information." ;
	float reflectivity_peak(sample, ddm) ;
		reflectivity_peak:long_name = "Peak linear reflectivity" ;
		reflectivity_peak:coordinates = "sp_lat sp_lon" ;
		reflectivity_peak:units = "linear" ;
		reflectivity_peak:_FillValue = -9999.f ;
		reflectivity_peak:comment = "Surface reflectivity calculate at the DDM peak power bin [3]." ;
	float ddm_nbrcs_center(sample, ddm) ;
		ddm_nbrcs_center:long_name = "DDM NBRCS calculated around the central bin" ;
		ddm_nbrcs_center:coordinates = "sp_lat sp_lon" ;
		ddm_nbrcs_center:units = "1" ;
		ddm_nbrcs_center:_FillValue = -9999.f ;
		ddm_nbrcs_center:comment = "Approximation of the DDM NBRCS using a fixed and centered delay/Doppler grid in the BRCS DDM. Calculated by dividing the sum of a 3x5 grid of the BRCS DDM (brcs) by the sum of the equivalent grid from the effective scattering area DDM (eff_scatter). The grid region consists of 3 delay bins and 5 Doppler bins centered at delay bin 9 and Doppler bin 5 (using zero based indexing) of the BRCS and effective area DDMs. Computed only over land." ;
	float ddm_nbrcs_peak(sample, ddm) ;
		ddm_nbrcs_peak:long_name = "DDM NBRCS calculated at the peak bin" ;
		ddm_nbrcs_peak:coordinates = "sp_lat sp_lon" ;
		ddm_nbrcs_peak:units = "1" ;
		ddm_nbrcs_peak:_FillValue = -9999.f ;
		ddm_nbrcs_peak:comment = "Approximation of the DDM NBRCS using the peak DDM only. Calculated by dividing the BRCS DDM peak bin (brcs) by the single central effective scatter area bin (eff_scatter). Computed only over land." ;
	byte coherency_state(sample, ddm) ;
		coherency_state:long_name = "Coherency State" ;
		coherency_state:coordinates = "sp_lat sp_lon" ;
		coherency_state:units = "1" ;
		coherency_state:_FillValue = -99b ;
		coherency_state:comment = "Meaning of each confidence state value:\n0 =  Not coherent\n1 =  Coherent\n2 =  Mixed Coherence\n3 =  Indeterminate Coherence" ;
	float coherency_ratio(sample, ddm) ;
		coherency_ratio:long_name = "Coherency Ratio" ;
		coherency_ratio:coordinates = "sp_lat sp_lon" ;
		coherency_ratio:units = "1" ;
		coherency_ratio:_FillValue = -9999.f ;
		coherency_ratio:comment = "Estimation of the ratio of received power between the central bins and periphery bins of the raw_counts DDM after the elimination of noise bins [4]. A higher ratio is more indicative of signal coherence." ;
	int quality_flags(sample, ddm) ;
		quality_flags:long_name = "Per-DDM quality flags 1" ;
		quality_flags:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		quality_flags:_FillValue = -9999 ;
		quality_flags:valid_range = 0, 2147483647 ;
		quality_flags:flag_masks = 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824 ;
		quality_flags:flag_meanings = "ocean_poor_overall_quality s_band_powered_up small_sc_attitude_err large_sc_attitude_err black_body_ddm ddmi_reconfigured spacewire_crc_invalid ddm_is_test_pattern channel_idle low_confidence_ddm_noise_floor sp_over_land sp_very_near_land sp_near_land large_step_noise_floor large_step_lna_temp direct_signal_in_ddm low_confidence_gps_eirp_estimate rfi_detected brcs_ddm_sp_bin_delay_error brcs_ddm_sp_bin_dopp_error neg_brcs_value_used_for_nbrcs gps_pvt_sp3_error sp_non_existent_error brcs_lut_range_error ant_data_lut_range_error bb_framing_error fsw_comp_shift_error low_quality_gps_ant_knowledge sc_altitude_out_of_nominal_range anomalous_sampling_period invalid_roll_state" ;
		quality_flags:comment = "First group of the Per-DDM quality flags. 1 indicates presence of condition. More quality flags can be found in quality_flags_2. Flag bit masks:\n1/0x00000001 = ocean_poor_overall_quality\n\tSet if this sample is determined to be of overall poor quality for ocean applications. The logical OR of the following flags. If any one of the following flags are set then ocean_poor_overall_quality will be set:\n\tlarge_sc_attitude_err\n\tblack_body_ddm\n\tddmi_reconfigured\n\tspacewire_crc_invalid\n\tddm_is_test_pattern\n\tchannel_idle\n\tlow_confidence_ddm_noise_floor\n\tsp_over_land\n\tsp_very_near_land\n\tlarge_step_noise_floor\n\tlarge_step_lna_temp\n\tdirect_signal_in_ddm\n\tlow_confidence_gps_eirp_estimate\n\trfi_detected\n\tbrcs_ddm_sp_bin_delay_error\n\tbrcs_ddm_sp_bin_dopp_error\n\tgps_pvt_sp3_error\n\tsp_non_existent_error\n\tbrcs_lut_range_error\n\tant_data_lut_range_error\n\tbb_framing_error\n\tfsw_comp_shift_error\n\tlow_quality_gps_ant_knowledge\n\tsc_altitude_out_of_nominal_range\n\tanomalous_sampling_period\n\tinvalid_roll_state\n\tincorrect_ddmi_antenna_selection(quality_flags_2)\n\tsp_in_sidelobe(quality_flags_2)\n\tfatal_nst_outage(quality_flags_2)\n\tlow_zenith_ant_gain(quality_flags_2)\n\tpoor_bb_quality(quality_flags_2)\n\tlow_coherency_ratio(quality_flags_2)\n2/0x00000002 = s_band_powered_up\n\tSet if S-band transmitter is powered up.\n4/0x00000004 = small_sc_attitude_err\n\tSet if the absolute value of the spacecraft roll is between 1 and 30 degrees, the pitch is between 1 and 10 degrees, or the yaw is between 1 and 5 degrees.\n8/0x00000008 = large_sc_attitude_err\n\tSet if the absolute value of the spacecraft roll is greater than or equal to 30 degrees, the pitch is greater than or equal to 10 degrees, or the yaw is greater than or equal to 5 degrees.\n16/0x00000010 = black_body_ddm\n\tSet if the black body load was selected during the DDM sampling period.\n32/0x00000020 = ddmi_reconfigured\n\tSet if the DDMI was reconfigured during the DDM sampling period.\n64/0x00000040 = spacewire_crc_invalid\n\tSet if the DDM CRC transmitted from the DDMI to the spacecraft computer was not valid.\n128/0x00000080 = ddm_is_test_pattern\n\tSet if the DDM is a test pattern generated by the DDMI.\n256/0x00000100 = channel_idle\n\tSet if this reflectometry channel was not tracking a PRN.\n512/0x00000200 = low_confidence_ddm_noise_floor\n\tSet if the difference between this DDM noise floor and the previous DDM noise floor is greater than 10 percent.\n1024/0x00000400 = sp_over_land\n\tSet if the specular point is over land. Referenced using a map with 0.1 degree lat/lon bins. Coastline features or islands smaller than bin size may not be properly captured.\n2048/0x00000800 = sp_very_near_land\n\tSet if the specular point is within 25 km of land. Referenced using a map with 0.1 degree lat/lon bins.\n4096/0x00001000 = sp_near_land\n\tSet if the specular point is within 50 km of land. Referenced using a map with 0.1 degree lat/lon bins.\n8192/0x00002000 = large_step_noise_floor\n\tSet if the difference between this DDM noise floor and the previous DDM noise floor is greater than 0.24 dB.\n16384/0x00004000 = large_step_lna_temp\n\tSet if the LNA temperature rate of change is greater than 1 degree C per minute.\n32768/0x00008000 = direct_signal_in_ddm\n\tSet if the absolute value of the difference between direct signal code phase and the DDM signal code phase is less than or equal to four.\n65536/0x00010000 = low_confidence_gps_eirp_estimate\n\tSet when there is low confidence in the GPS effective isotropic radiated power estimate.\n131072/0x00020000 = rfi_detected\n\tSet when the kurtosis of the DDM noise floor deviates from pure Gaussian by more than 1.0.\n262144/0x00040000 = brcs_ddm_sp_bin_delay_error\n\tSet if the calculated specular point bin delay row is outside of the valid range. This range is different for specular points over land and ocean. The zero-based valid range is greater than 4 (ocean) / 1 (land)and less than 8 (ocean) / 15 (land).\n524288/0x00080000 = brcs_ddm_sp_bin_dopp_error\n\tSet if the calculated specular point bin Doppler column is outside of the valid range. This range is different for specular points over land and ocean. The zero-based valid range is greater than 4 (ocean) / 0 (land) and less than 6 (ocean) / 10 (land).\n1048576/0x00100000 = neg_brcs_value_used_for_nbrcs\n\tSet if any bin in the 3 x 5 brcs area used to calculate ddm_nbrcs has a negative value.\n2097152/0x00200000 = gps_pvt_sp3_error\n\tCannot calculate GPS SV position/velocity/time from SP3 file.\n4194304/0x00400000 = sp_non_existent_error\n\tSpecular point does not exist.\n8388608/0x00800000 = brcs_lut_range_error\n\tUnable to index into BRCS uncertainty lookup table.\n16777216/0x01000000 = ant_data_lut_range_error\n\tUnable to index into antenna data lookup table.\n33554432/0x02000000 = bb_framing_error\n\tInsufficient black body data for calibration.\n67108864/0x04000000 = fsw_comp_shift_error\n\tFlight software telemetry encoding error of the fsw_comp_delay_shift and fsw_comp_dopp_shift variables. Corrected in FSW version 4.5.\n134217728/0x08000000 = low_quality_gps_ant_knowledge\n\tNot enough data is available to properly calibrate the NBRCS for this sample\'s GPS satellite.\n268435456/0x10000000 = sc_altitude_out_of_nominal_range\n\tThe spacecraft\'s altitude is out of nominal altitude range. Nominal altitude is defined as between 450 km to 550 km.\n536870912/0x20000000 = anomalous_sampling_period\n\tSet when an anomaly was observed on the CYGNSS or GPS satellite while this sample was taken. These samples have produced data that do not align with typical CYGNSS results. See up to date list at:\nhttps://docs.google.com/spreadsheets/d/1AFAZanVGDApLSnJQAAdPfOKoJQs0jnB8ZvIuD1Z5mAc/edit?usp=sharing\n1073741824/0x40000000 = invalid_roll_state\n\tThe spacecraft’s reported roll angle is more than 1 degree from the commanded roll.\n" ;
	int quality_flags_2(sample, ddm) ;
		quality_flags_2:long_name = "Per-DDM quality flags 2" ;
		quality_flags_2:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		quality_flags_2:_FillValue = -9999 ;
		quality_flags_2:valid_range = 0, 65535 ;
		quality_flags_2:flag_masks = 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768 ;
		quality_flags_2:flag_meanings = "incorrect_ddmi_antenna_selection high_signal_noise noise_floor_cal_error sp_in_sidelobe negligible_nst_outage minor_nst_outage fatal_nst_outage low_zenith_ant_gain poor_bb_quality poor_quality_bin_ratio low_coherency_ratio land_poor_overall_quality sp_over_ocean sp_extremely_near_ocean sp_very_near_ocean land_obs_range_error" ;
		quality_flags_2:comment = "Second group of the Per-DDM quality flags. 1 indicates presence of condition. The first group of quality flags can be found in quality_flags. Flag bit masks:\n1/0x00000001 = incorrect_ddmi_antenna_selection\n\tThe wrong (port or starboard) antenna was selected.\n2/0x00000002 = high_signal_noise\n\tThe signal is in the highest noise group, but there are still some OK noise rows. Samples are suspect, but may contain quality data. Flag only used for land applications.\n4/0x00000004 = noise_floor_cal_error\n\tThe signal is off or is very near the top rows of the full DDM. A proper noise floor cannot be computed. Flag only used for land applications.\n8/0x00000008 = sp_in_sidelobe\n\tThe specular point is in the sidelobe causing low confidence in the antenna gain.\n16/0x00000010 = negligible_nst_outage\n\tMinor star track outage with negligible impact on attitude knowledge\n32/0x00000020 = minor_nst_outage\n\tMinor star track outage with small but acceptable impact on attitude knowledge\n64/0x00000040 = fatal_nst_outage\n\tStar track outage with unacceptable impact on attitude knowledge\n128/0x00000080 = low_zenith_ant_gain\n\tZenith antenna gain is less than -6 dB\n256/0x00000100 = poor_bb_quality\n\tThe distance between the surrounding BB samples > 1350 seconds OR the absolute value of the time to the nearest BB > 350 seconds.\n512/0x00000200 = poor_quality_bin_ratio\n\tBin ratio on the nadir or zenith antenna is associated with degraded performance.\n1024/0x00000400 = low_coherency_ratio\n\tIndicates low confidence in coherence state given comparable signal power levels to the measurement\'s noise floor.\n2048/0x00000800 = land_poor_overall_quality\n\tSet if this sample is determined to be of overall poor quality for land applications. The logical OR of the following flags. If any one of the following flags are set then land_poor_overall_quality will be set:\n\tlarge_sc_attitude_err\n\tblack_body_ddm\n\tddmi_reconfigured\n\tspacewire_crc_invalid\n\tddm_is_test_pattern\n\tchannel_idle\n\tlow_confidence_ddm_noise_floor\n\tlarge_step_noise_floor\n\tlarge_step_lna_temp\n\tdirect_signal_in_ddm\n\tlow_confidence_gps_eirp_estimate\n\trfi_detected\n\tbrcs_ddm_sp_bin_delay_error\n\tbrcs_ddm_sp_bin_dopp_error\n\tgps_pvt_sp3_error\n\tsp_non_existent_error\n\tbrcs_lut_range_error\n\tant_data_lut_range_error\n\tbb_framing_error\n\tfsw_comp_shift_error\n\tlow_quality_gps_ant_knowledge\n\tsc_altitude_out_of_nominal_range\n\tanomalous_sampling_period\n\tinvalid_roll_state\n\tincorrect_ddmi_antenna_selection(quality_flags_2)\n\thigh_signal_noise(quality_flags_2)\n\tnoise_floor_cal_error(quality_flags_2)\n\tsp_in_sidelobe(quality_flags_2)\n\tfatal_nst_outage(quality_flags_2)\n\tlow_zenith_ant_gain(quality_flags_2)\n\tpoor_bb_quality(quality_flags_2)\n\tsp_over_ocean(quality_flags_2)\n\tsp_extremely_near_ocean(quality_flags_2)\n\tsp_very_near_ocean(quality_flags_2)\n\tland_obs_range_error(quality_flags_2)\n4096/0x00001000 = sp_over_ocean\n\tSet if the specular point is over ocean. Referenced using a map with 0.1 degree lat/lon bins. Coastline features or islands smaller than bin size may not be properly captured.\n8192/0x00002000 = sp_extremely_near_ocean\n\tSet if the specular point is within 10 km of ocean. Referenced using a map with 0.1 degree lat/lon bins.\n16384/0x00004000 = sp_very_near_ocean\n\tSet if the specular point is within 25 km of ocean. Referenced using a map with 0.1 degree lat/lon bins.\n32768/0x00008000 = land_obs_range_error\n\tSet if any value in an L1 land observable calculation is outside of the valid range.\n" ;
	int raw_counts(sample, ddm, delay, doppler) ;
		raw_counts:long_name = "DDM bin raw counts" ;
		raw_counts:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		raw_counts:units = "1" ;
		raw_counts:_FillValue = -9999 ;
		raw_counts:comment = "17 x 11 array of DDM bin raw counts These are the uncalibrated power values produced by the DDMI." ;
	float power_analog(sample, ddm, delay, doppler) ;
		power_analog:long_name = "DDM bin analog power" ;
		power_analog:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		power_analog:units = "watt" ;
		power_analog:_FillValue = -9999.f ;
		power_analog:comment = "17 x 11 array of DDM bin analog power, Watts. analog_power is the true power that would have been measured by an ideal (analog) power sensor. power_digital  is the power measured by the actual 2-bit sensor, which includes quantization effects. power_analog has been corrected for quantization effects." ;
	float brcs(sample, ddm, delay, doppler) ;
		brcs:long_name = "DDM bin bistatic radar cross section" ;
		brcs:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		brcs:units = "meter2" ;
		brcs:_FillValue = -9999.f ;
		brcs:comment = "17 x 11 array of DDM bin bistatic radar cross section, m^2. The specular point is located in DDM bin round(brcs_ddm_sp_bin_delay_row), round(brcs_ddm_sp_bin_dopp_col)." ;
	float eff_scatter(sample, ddm, delay, doppler) ;
		eff_scatter:long_name = "DDM bin effective scattering area" ;
		eff_scatter:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		eff_scatter:units = "meter2" ;
		eff_scatter:_FillValue = -9999.f ;
		eff_scatter:comment = "17 x 11 array of DDM bin effective scattering area, m^2. This is an estimate of the true surface scattering area that contributes power to each DDM bin, after accounting for the GPS signal spreading function.  It is calculated by convolving the GPS ambiguity function with the surface area that contributes power to a given DDM bin as determined by its delay and Doppler values and the measurement geometry. The specular point bin location matches the specular point bin location in brcs." ;
	float ddm_mean_noise_cnts_rows_1_15(sample, ddm) ;
		ddm_mean_noise_cnts_rows_1_15:long_name = "Mean DDM bin noise counts for delay rows 1 through 15" ;
		ddm_mean_noise_cnts_rows_1_15:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_mean_noise_cnts_rows_1_15:units = "1" ;
		ddm_mean_noise_cnts_rows_1_15:_FillValue = -9999.f ;
		ddm_mean_noise_cnts_rows_1_15:comment = "The sum of the full DDM bin raw counts in delay rows  1-15 divided by the number of bins in rows 1-15." ;
	float ddm_mean_noise_cnts_rows_16_30(sample, ddm) ;
		ddm_mean_noise_cnts_rows_16_30:long_name = "Mean DDM bin noises count for delay  rows 16 through 30" ;
		ddm_mean_noise_cnts_rows_16_30:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_mean_noise_cnts_rows_16_30:units = "1" ;
		ddm_mean_noise_cnts_rows_16_30:_FillValue = -9999.f ;
		ddm_mean_noise_cnts_rows_16_30:comment = "The sum of the full DDM bin raw counts in delay rows  16-30 divided by the number of bins in rows 16-30." ;
	float ddm_mean_noise_cnts_rows_31_45(sample, ddm) ;
		ddm_mean_noise_cnts_rows_31_45:long_name = "Mean DDM bin noises count for delay  rows 31 through 45" ;
		ddm_mean_noise_cnts_rows_31_45:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_mean_noise_cnts_rows_31_45:units = "1" ;
		ddm_mean_noise_cnts_rows_31_45:_FillValue = -9999.f ;
		ddm_mean_noise_cnts_rows_31_45:comment = "The sum of the full DDM bin raw counts in delay rows  31-45 divided by the number of bins in rows 31-45." ;
	int rf_1_zenith_noise_channel(sample) ;
		rf_1_zenith_noise_channel:long_name = "RF 1 (Zenith) Noise Channel" ;
		rf_1_zenith_noise_channel:units = "1" ;
		rf_1_zenith_noise_channel:_FillValue = -9999 ;
		rf_1_zenith_noise_channel:comment = "RF 1 (Zenith) DMR Noise Channel" ;
	int rf_2_starboard_noise_channel(sample) ;
		rf_2_starboard_noise_channel:long_name = "RF 2 (Starboard) Noise Channel" ;
		rf_2_starboard_noise_channel:units = "1" ;
		rf_2_starboard_noise_channel:_FillValue = -9999 ;
		rf_2_starboard_noise_channel:comment = "RF 2 (Starboard) DMR Noise Channel" ;
	int rf_3_port_noise_channel(sample) ;
		rf_3_port_noise_channel:long_name = "RF 3 (Port) Noise Channel" ;
		rf_3_port_noise_channel:units = "1" ;
		rf_3_port_noise_channel:_FillValue = -9999 ;
		rf_3_port_noise_channel:comment = "RF 3 (Port) DMR Noise Channel" ;
	float bb_mean_noise_cnts_prev(sample, ddm) ;
		bb_mean_noise_cnts_prev:long_name = "Mean of previous black body bin noise counts" ;
		bb_mean_noise_cnts_prev:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_mean_noise_cnts_prev:units = "1" ;
		bb_mean_noise_cnts_prev:_FillValue = -9999.f ;
		bb_mean_noise_cnts_prev:comment = "The sum of the full BB DDM bin raw counts divided by the number of bins in the full BB DDM that is closest in time to and earlier than ddm_time." ;
	float bb_mean_noise_cnts_next(sample, ddm) ;
		bb_mean_noise_cnts_next:long_name = "Mean of next black body bin noise counts" ;
		bb_mean_noise_cnts_next:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_mean_noise_cnts_next:units = "1" ;
		bb_mean_noise_cnts_next:_FillValue = -9999.f ;
		bb_mean_noise_cnts_next:comment = "The sum of the full BB DDM bin raw counts divided by the number of bins in the full BB DDM that is closest in time to and later than ddm_time." ;
	float bb_mean_noise_cnts_interp(sample, ddm) ;
		bb_mean_noise_cnts_interp:long_name = "Mean of black body bin noise counts interpolated to ddm_time" ;
		bb_mean_noise_cnts_interp:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_mean_noise_cnts_interp:units = "1" ;
		bb_mean_noise_cnts_interp:_FillValue = -9999.f ;
		bb_mean_noise_cnts_interp:comment = "BB DDM mean noise counts interpolated to ddm_time from bb_mean_noise_cnts_prev and bb_mean_noise_cnts_next." ;
	float bb_mean_noise_cnts_prev_corr(sample, ddm) ;
		bb_mean_noise_cnts_prev_corr:long_name = "Mean of previous black body bin noise counts corrected" ;
		bb_mean_noise_cnts_prev_corr:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_mean_noise_cnts_prev_corr:units = "1" ;
		bb_mean_noise_cnts_prev_corr:_FillValue = -9999.f ;
		bb_mean_noise_cnts_prev_corr:comment = "The sum of the full BB DDM bin raw counts divided by the number of bins in the full BB DDM that is closest in time to and earlier than ddm_time. This values has been corrected." ;
	float bb_mean_noise_cnts_next_corr(sample, ddm) ;
		bb_mean_noise_cnts_next_corr:long_name = "Mean of next black body bin noise counts corrected" ;
		bb_mean_noise_cnts_next_corr:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_mean_noise_cnts_next_corr:units = "1" ;
		bb_mean_noise_cnts_next_corr:_FillValue = -9999.f ;
		bb_mean_noise_cnts_next_corr:comment = "The sum of the full BB DDM bin raw counts divided by the number of bins in the full BB DDM that is closest in time to and later than ddm_time. This values has been corrected." ;
	float bb_mean_noise_cnts_interp_corr(sample, ddm) ;
		bb_mean_noise_cnts_interp_corr:long_name = "Mean of black body bin noise counts interpolated to ddm_time corrected" ;
		bb_mean_noise_cnts_interp_corr:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_mean_noise_cnts_interp_corr:units = "1" ;
		bb_mean_noise_cnts_interp_corr:_FillValue = -9999.f ;
		bb_mean_noise_cnts_interp_corr:comment = "BB DDM mean noise counts interpolated to ddm_time from bb_mean_noise_cnts_prev and bb_mean_noise_cnts_next. This values has been corrected." ;
	float bb_bin_ratio_next(sample, ddm) ;
		bb_bin_ratio_next:long_name = "The bin ratio at the next blackbody" ;
		bb_bin_ratio_next:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_bin_ratio_next:units = "1" ;
		bb_bin_ratio_next:_FillValue = -9999.f ;
		bb_bin_ratio_next:comment = "The bin ratio at the next blackbody" ;
	float bb_bin_ratio_prev(sample, ddm) ;
		bb_bin_ratio_prev:long_name = "The bin ratio at the previous black body" ;
		bb_bin_ratio_prev:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_bin_ratio_prev:units = "1" ;
		bb_bin_ratio_prev:_FillValue = -9999.f ;
		bb_bin_ratio_prev:comment = "The bin ratio at the previous blackbody" ;
	float bb_power_watts(sample, ddm) ;
		bb_power_watts:long_name = "Black body noise power" ;
		bb_power_watts:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_power_watts:units = "watt" ;
		bb_power_watts:_FillValue = -9999.f ;
		bb_power_watts:comment = "bb_mean_noise_cnts_interp converted to Watts" ;
	float gps_azimuth_tx_angle_deg(sample, ddm) ;
		gps_azimuth_tx_angle_deg:long_name = "GPS azimuth transmit angle" ;
		gps_azimuth_tx_angle_deg:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		gps_azimuth_tx_angle_deg:units = "degree" ;
		gps_azimuth_tx_angle_deg:_FillValue = -9999.f ;
		gps_azimuth_tx_angle_deg:comment = "SV azimuth transmit angle in the direction of the specular point" ;
	float inst_noise_power_watts(sample, ddm) ;
		inst_noise_power_watts:long_name = "Instrument noise power" ;
		inst_noise_power_watts:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		inst_noise_power_watts:units = "watt" ;
		inst_noise_power_watts:_FillValue = -9999.f ;
		inst_noise_power_watts:comment = "Instrument noise power in Watts" ;
	float total_rx_gain_db(sample, ddm) ;
		total_rx_gain_db:long_name = "Total instrument gain" ;
		total_rx_gain_db:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		total_rx_gain_db:units = "dB" ;
		total_rx_gain_db:_FillValue = -9999.f ;
		total_rx_gain_db:comment = "Total instrument gain, 10log(counts/Watt)" ;
	float dig_to_analog_factor(sample, ddm) ;
		dig_to_analog_factor:long_name = "DDM bin digital to analog power factor" ;
		dig_to_analog_factor:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		dig_to_analog_factor:units = "1" ;
		dig_to_analog_factor:_FillValue = -9999.f ;
		dig_to_analog_factor:comment = "DDM bin analog to digital power conversion factor" ;
	int rf_1_zenith_minus_3_cnts(sample) ;
		rf_1_zenith_minus_3_cnts:long_name = "RF 1 (Zenith) Minus 3 Counts" ;
		rf_1_zenith_minus_3_cnts:units = "1" ;
		rf_1_zenith_minus_3_cnts:_FillValue = -9999 ;
		rf_1_zenith_minus_3_cnts:comment = "RF 1 (Zenith) Minus 3 Counts" ;
	int rf_1_zenith_minus_1_cnts(sample) ;
		rf_1_zenith_minus_1_cnts:long_name = "RF 1 (Zenith) Minus 1 Counts" ;
		rf_1_zenith_minus_1_cnts:units = "1" ;
		rf_1_zenith_minus_1_cnts:_FillValue = -9999 ;
		rf_1_zenith_minus_1_cnts:comment = "RF 1 (Zenith) Minus 1 Counts" ;
	int rf_1_zenith_plus_3_cnts(sample) ;
		rf_1_zenith_plus_3_cnts:long_name = "RF 1 (Zenith) Plus 3 Counts" ;
		rf_1_zenith_plus_3_cnts:units = "1" ;
		rf_1_zenith_plus_3_cnts:_FillValue = -9999 ;
		rf_1_zenith_plus_3_cnts:comment = "RF 1 (Zenith) Plus 3 Counts" ;
	int rf_1_zenith_plus_1_cnts(sample) ;
		rf_1_zenith_plus_1_cnts:long_name = "RF 1 (Zenith) Plus 1 Counts" ;
		rf_1_zenith_plus_1_cnts:units = "1" ;
		rf_1_zenith_plus_1_cnts:_FillValue = -9999 ;
		rf_1_zenith_plus_1_cnts:comment = "RF 1 (Zenith) Plus 1 Counts" ;
	int rf_2_starboard_minus_3_cnts(sample) ;
		rf_2_starboard_minus_3_cnts:long_name = "RF 2 (Starboard) Minus 3 Counts" ;
		rf_2_starboard_minus_3_cnts:units = "1" ;
		rf_2_starboard_minus_3_cnts:_FillValue = -9999 ;
		rf_2_starboard_minus_3_cnts:comment = "RF 2 (Starboard) Minus 3 Counts" ;
	int rf_2_starboard_minus_1_cnts(sample) ;
		rf_2_starboard_minus_1_cnts:long_name = "RF 2 (Starboard) Minus 1 Counts" ;
		rf_2_starboard_minus_1_cnts:units = "1" ;
		rf_2_starboard_minus_1_cnts:_FillValue = -9999 ;
		rf_2_starboard_minus_1_cnts:comment = "RF 2 (Starboard) Minus 1 Counts" ;
	int rf_2_starboard_plus_3_cnts(sample) ;
		rf_2_starboard_plus_3_cnts:long_name = "RF 2 (Starboard) Plus 3 Counts" ;
		rf_2_starboard_plus_3_cnts:units = "1" ;
		rf_2_starboard_plus_3_cnts:_FillValue = -9999 ;
		rf_2_starboard_plus_3_cnts:comment = "RF 2 (Starboard) Plus 3 Counts" ;
	int rf_2_starboard_plus_1_cnts(sample) ;
		rf_2_starboard_plus_1_cnts:long_name = "RF 2 (Starboard) Plus 1 Counts" ;
		rf_2_starboard_plus_1_cnts:units = "1" ;
		rf_2_starboard_plus_1_cnts:_FillValue = -9999 ;
		rf_2_starboard_plus_1_cnts:comment = "RF 2 (Starboard) Plus 1 Counts" ;
	int rf_3_port_minus_3_cnts(sample) ;
		rf_3_port_minus_3_cnts:long_name = "RF 3 (Port) Minus 3 Counts" ;
		rf_3_port_minus_3_cnts:units = "1" ;
		rf_3_port_minus_3_cnts:_FillValue = -9999 ;
		rf_3_port_minus_3_cnts:comment = "RF 3 (Port) Minus 3 Counts" ;
	int rf_3_port_minus_1_cnts(sample) ;
		rf_3_port_minus_1_cnts:long_name = "RF 3 (Port) Minus 1 Counts" ;
		rf_3_port_minus_1_cnts:units = "1" ;
		rf_3_port_minus_1_cnts:_FillValue = -9999 ;
		rf_3_port_minus_1_cnts:comment = "RF 3 (Port) Minus 1 Counts" ;
	int rf_3_port_plus_3_cnts(sample) ;
		rf_3_port_plus_3_cnts:long_name = "RF 3 (Port) Plus 3 Counts" ;
		rf_3_port_plus_3_cnts:units = "1" ;
		rf_3_port_plus_3_cnts:_FillValue = -9999 ;
		rf_3_port_plus_3_cnts:comment = "RF 3 (Port) Plus 3 Counts" ;
	int rf_3_port_plus_1_cnts(sample) ;
		rf_3_port_plus_1_cnts:long_name = "RF 3 (Port) Plus 1 Counts" ;
		rf_3_port_plus_1_cnts:units = "1" ;
		rf_3_port_plus_1_cnts:_FillValue = -9999 ;
		rf_3_port_plus_1_cnts:comment = "RF 3 (Port) Plus 1 Counts" ;
	int zenith_front_end_gain(sample) ;
		zenith_front_end_gain:long_name = "RF 1 (Zenith) F/E Gain (dB, 0=Automatic)" ;
		zenith_front_end_gain:units = "dB" ;
		zenith_front_end_gain:_FillValue = -9999 ;
		zenith_front_end_gain:comment = "RF 1 (Zenith) F/E Gain (dB, 0=Automatic)" ;
	float zsr_eirp_gain(sample, ddm) ;
		zsr_eirp_gain:long_name = "Zenith-to-Specular Amplifier Gain Ratio" ;
		zsr_eirp_gain:units = "1" ;
		zsr_eirp_gain:_FillValue = -9999.f ;
		zsr_eirp_gain:comment = "Zenith-to-Specular amplifier gain ratio" ;
	float zenith_ant_gain(sample, ddm) ;
		zenith_ant_gain:long_name = "Zenith Antenna Gain" ;
		zenith_ant_gain:units = "dB" ;
		zenith_ant_gain:_FillValue = -9999.f ;
		zenith_ant_gain:comment = "Zenith antenna gain from LUT" ;
	float zenith_power(sample, ddm) ;
		zenith_power:long_name = "Zenith Power" ;
		zenith_power:units = "1" ;
		zenith_power:_FillValue = -9999.f ;
		zenith_power:comment = "Zenith power value calculated from zenith i2q2 counts and conversion constants" ;
	float eirp_in_zenith_dir(sample, ddm) ;
		eirp_in_zenith_dir:long_name = "EIRP in Zenith Direction" ;
		eirp_in_zenith_dir:units = "1" ;
		eirp_in_zenith_dir:_FillValue = -9999.f ;
		eirp_in_zenith_dir:comment = "EIRP in zenith direction" ;
	float szr_lna_gain(sample, ddm) ;
		szr_lna_gain:long_name = "Specular-to-Zenith LNA gain ratio" ;
		szr_lna_gain:units = "1" ;
		szr_lna_gain:_FillValue = -9999.f ;
		szr_lna_gain:comment = "Nadir LNA gain divided by the zenith LNA gain" ;
	int num_eirps_averaged(sample, ddm) ;
		num_eirps_averaged:long_name = "Number of averaged EIRPs" ;
		num_eirps_averaged:units = "1" ;
		num_eirps_averaged:_FillValue = -9999 ;
		num_eirps_averaged:comment = "Number of EIRP values averaged together to get gps_eirp." ;
	float gps_eirp_std_dev(sample, ddm) ;
		gps_eirp_std_dev:long_name = "Standard Deviation of Averaged EIRPs" ;
		gps_eirp_std_dev:units = "watt" ;
		gps_eirp_std_dev:_FillValue = -9999.f ;
		gps_eirp_std_dev:comment = "Standard deviation of GPS EIRPs averaged together to get gps_eirp." ;
	float gps_eirp_not_averaged(sample, ddm) ;
		gps_eirp_not_averaged:long_name = "GPS effective isotropic radiated power" ;
		gps_eirp_not_averaged:units = "watt" ;
		gps_eirp_not_averaged:_FillValue = -9999.f ;
		gps_eirp_not_averaged:comment = "The estimated effective isotropic RF power (EIRP) of the L1 C/A code signal within ± 1 MHz of the L1 carrier radiated by space vehicle, sv_num, in the direction of the CYGNSS spacecraft, in Watts, at ddm_timestamp_utc. " ;
	float off_zenith_dir_sig_angle(sample, ddm) ;
		off_zenith_dir_sig_angle:long_name = "The Off-Zenith Angle of the Direct Signal" ;
		off_zenith_dir_sig_angle:units = "1" ;
		off_zenith_dir_sig_angle:_FillValue = -9999.f ;
		off_zenith_dir_sig_angle:comment = "The Off-Zenith Angle of the Direct Signal." ;
	float rx_to_tx_az_body(sample, ddm) ;
		rx_to_tx_az_body:long_name = "Receiver to transmitter azimuth in body frame" ;
		rx_to_tx_az_body:units = "degree" ;
		rx_to_tx_az_body:_FillValue = -9999.f ;
		rx_to_tx_az_body:comment = "Receiver to transmitter azimuth angle in the body coordinate frame." ;
	float rx_to_tx_theta_body(sample, ddm) ;
		rx_to_tx_theta_body:long_name = "Receiver to transmitter theta in body frame" ;
		rx_to_tx_theta_body:units = "degree" ;
		rx_to_tx_theta_body:_FillValue = -9999.f ;
		rx_to_tx_theta_body:comment = "Receiver to transmitter theta angle in the body coordinate frame." ;
	float rx_to_tx_az_orbit(sample, ddm) ;
		rx_to_tx_az_orbit:long_name = "Receiver to transmitter azimuth in orbit frame" ;
		rx_to_tx_az_orbit:units = "degree" ;
		rx_to_tx_az_orbit:_FillValue = -9999.f ;
		rx_to_tx_az_orbit:comment = "Receiver to transmitter azimuth angle in the orbit coordinate frame." ;
	float rx_to_tx_theta_orbit(sample, ddm) ;
		rx_to_tx_theta_orbit:long_name = "Receiver to transmitter theta in orbit frame" ;
		rx_to_tx_theta_orbit:units = "degree" ;
		rx_to_tx_theta_orbit:_FillValue = -9999.f ;
		rx_to_tx_theta_orbit:comment = "Receiver to transmitter theta angle in the orbit coordinate frame." ;
	float rx_to_tx_az_zant(sample, ddm) ;
		rx_to_tx_az_zant:long_name = "Receiver to transmitter azimuth in zant frame" ;
		rx_to_tx_az_zant:units = "degree" ;
		rx_to_tx_az_zant:_FillValue = -9999.f ;
		rx_to_tx_az_zant:comment = "Receiver to transmitter azimuth angle in the zenith anetnna coordinate frame." ;
	float rx_to_tx_theta_zant(sample, ddm) ;
		rx_to_tx_theta_zant:long_name = "Receiver to transmitter theta in zant frame" ;
		rx_to_tx_theta_zant:units = "degree" ;
		rx_to_tx_theta_zant:_FillValue = -9999.f ;
		rx_to_tx_theta_zant:comment = "Receiver to transmitter theta angle in the zenith anetnna coordinate frame." ;
	double lna_zenith_gain_uncorrected(sample) ;
		lna_zenith_gain_uncorrected:long_name = "LNA Zenith Gain Uncorrected" ;
		lna_zenith_gain_uncorrected:units = "dB" ;
		lna_zenith_gain_uncorrected:_FillValue = -9999. ;
		lna_zenith_gain_uncorrected:comment = "Uncorrected LNA zenith gain in dB referenced from the preflight pattern" ;
	double lna_zenith_gain_corrected(sample) ;
		lna_zenith_gain_corrected:long_name = "LNA Zenith Gain Corrected" ;
		lna_zenith_gain_corrected:units = "dB" ;
		lna_zenith_gain_corrected:_FillValue = -9999. ;
		lna_zenith_gain_corrected:comment = "Corrected LNA zenith gain in dB referenced from the corrected pattern" ;
	float lna_nadir_gain(sample, ddm) ;
		lna_nadir_gain:long_name = "LNA Nadir Gain" ;
		lna_nadir_gain:units = "dB" ;
		lna_nadir_gain:_FillValue = -9999.f ;
		lna_nadir_gain:comment = "LNA nadir gain in dB" ;
	int tx_to_rx_range(sample, ddm) ;
		tx_to_rx_range:long_name = "Tx to Rx range" ;
		tx_to_rx_range:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_to_rx_range:units = "meter" ;
		tx_to_rx_range:_FillValue = -9999 ;
		tx_to_rx_range:comment = "The distance between the CYGNSS spacecraft and the GPS satellite, in meters, at ddm_timestamp_utc." ;
	float gps_off_boresight_tx_to_rx_angle_deg(sample, ddm) ;
		gps_off_boresight_tx_to_rx_angle_deg:long_name = "GPS off boresight Tx to Rx angle" ;
		gps_off_boresight_tx_to_rx_angle_deg:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		gps_off_boresight_tx_to_rx_angle_deg:units = "degree" ;
		gps_off_boresight_tx_to_rx_angle_deg:_FillValue = -9999.f ;
		gps_off_boresight_tx_to_rx_angle_deg:comment = "SV antenna off boresight angle in the direction of the receiver" ;
	float gps_azimuth_tx_to_rx_angle_deg(sample, ddm) ;
		gps_azimuth_tx_to_rx_angle_deg:long_name = "GPS azimuth transmitter to receiver angle" ;
		gps_azimuth_tx_to_rx_angle_deg:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		gps_azimuth_tx_to_rx_angle_deg:units = "degree" ;
		gps_azimuth_tx_to_rx_angle_deg:_FillValue = -9999.f ;
		gps_azimuth_tx_to_rx_angle_deg:comment = "SV azimuth transmit angle in the direction of the receiver" ;
	byte bb_state(sample, ddm) ;
		bb_state:long_name = "Black body state information" ;
		bb_state:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_state:valid_range = 0b, 2b ;
		bb_state:units = "1" ;
		bb_state:_FillValue = -99b ;
		bb_state:comment = "0 = not a valid black body sample, 1 = valid black body sample that is not used, 2 = valid black body sample that is used" ;
	byte large_step_in_eirp(sample, ddm) ;
		large_step_in_eirp:long_name = "Large step in EIRP between neighboring samples" ;
		large_step_in_eirp:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		large_step_in_eirp:valid_range = 0b, 1b ;
		large_step_in_eirp:units = "1" ;
		large_step_in_eirp:_FillValue = -99b ;
		large_step_in_eirp:comment = "0 = not a large step in EIRP, 1 = there is a large step in EIRPs" ;
	float time_since_nst_outage(sample) ;
		time_since_nst_outage:long_name = "Time since NST Outage" ;
		time_since_nst_outage:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		time_since_nst_outage:units = "seonds" ;
		time_since_nst_outage:_FillValue = -9999.f ;
		time_since_nst_outage:comment = "If the nst_att_status is currently a non-zero value this variable will hold the number of seconds since the NST switched from 0." ;
	float att_off_cmd_outage_end(sample) ;
		att_off_cmd_outage_end:long_name = "Attitude off the commanded attitude at NST outage end" ;
		att_off_cmd_outage_end:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		att_off_cmd_outage_end:units = "degree" ;
		att_off_cmd_outage_end:_FillValue = -9999.f ;
		att_off_cmd_outage_end:comment = "If the nst_att_status is currently a non-zero value this variable will contain the value of how many degrees off from the commanded attitude state the spacecraft is when the nst_att_status goes back to zero. If the nst_att_status is zero this will contain the current attitude off from the commnaded attitude." ;
	double sc_pos_x_dbl(sample) ;
		sc_pos_x_dbl:long_name = "Spacecraft position X at DDM sample time" ;
		sc_pos_x_dbl:units = "meter" ;
		sc_pos_x_dbl:_FillValue = -99999999. ;
		sc_pos_x_dbl:comment = "The X component of the spacecraft WGS84 reference frame Earth-Centered Earth-Fixed (ECEF) position, in meters, at ddm_timestamp_utc" ;
	double sc_pos_y_dbl(sample) ;
		sc_pos_y_dbl:long_name = "Spacecraft position Y at DDM sample time" ;
		sc_pos_y_dbl:units = "meter" ;
		sc_pos_y_dbl:_FillValue = -99999999. ;
		sc_pos_y_dbl:comment = "The Y component of the spacecraft WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	double sc_pos_z_dbl(sample) ;
		sc_pos_z_dbl:long_name = "Spacecraft position Z at DDM sample time" ;
		sc_pos_z_dbl:units = "meter" ;
		sc_pos_z_dbl:_FillValue = -99999999. ;
		sc_pos_z_dbl:comment = "The Z component of the spacecraft WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	double sp_pos_x_dbl(sample, ddm) ;
		sp_pos_x_dbl:long_name = "Specular point position X" ;
		sp_pos_x_dbl:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_pos_x_dbl:units = "meter" ;
		sp_pos_x_dbl:_FillValue = -99999999. ;
		sp_pos_x_dbl:comment = "The X component of the specular point position in the ECEF coordinate system, in meters, at ddm_timestamp_utc, as calculated on the ground." ;
	double sp_pos_y_dbl(sample, ddm) ;
		sp_pos_y_dbl:long_name = "Specular point position Y" ;
		sp_pos_y_dbl:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_pos_y_dbl:units = "meter" ;
		sp_pos_y_dbl:_FillValue = -99999999. ;
		sp_pos_y_dbl:comment = "The Y component of the specular point position in the ECEF coordinate system, in meters, at ddm_timestamp_utc, as calculated on the ground." ;
	double sp_pos_z_dbl(sample, ddm) ;
		sp_pos_z_dbl:long_name = "Specular point position Z" ;
		sp_pos_z_dbl:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_pos_z_dbl:units = "meter" ;
		sp_pos_z_dbl:_FillValue = -99999999. ;
		sp_pos_z_dbl:comment = "The Z component of the specular point position in the ECEF coordinate system, in meters, at ddm_timestamp_utc, as calculated on the ground." ;
	double tx_pos_x_dbl(sample, ddm) ;
		tx_pos_x_dbl:long_name = "GPS Tx position X" ;
		tx_pos_x_dbl:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_pos_x_dbl:units = "meter" ;
		tx_pos_x_dbl:_FillValue = -99999999. ;
		tx_pos_x_dbl:comment = "The X component of the GPS spacecraft WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	double tx_pos_y_dbl(sample, ddm) ;
		tx_pos_y_dbl:long_name = "GPS Tx position Y" ;
		tx_pos_y_dbl:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_pos_y_dbl:units = "meter" ;
		tx_pos_y_dbl:_FillValue = -99999999. ;
		tx_pos_y_dbl:comment = "The Y component of the GPS spacecraft WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	double tx_pos_z_dbl(sample, ddm) ;
		tx_pos_z_dbl:long_name = "GPS Tx position Z" ;
		tx_pos_z_dbl:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_pos_z_dbl:units = "meter" ;
		tx_pos_z_dbl:_FillValue = -99999999. ;
		tx_pos_z_dbl:comment = "The Z component of the GPS spacecraft WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	double rx_to_sp_range_dbl(sample, ddm) ;
		rx_to_sp_range_dbl:long_name = "Rx to specular point range" ;
		rx_to_sp_range_dbl:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		rx_to_sp_range_dbl:units = "meter" ;
		rx_to_sp_range_dbl:_FillValue = -9999. ;
		rx_to_sp_range_dbl:comment = "The distance between the CYGNSS spacecraft and the specular point, in meters, at ddm_timestamp_utc." ;
	double tx_to_sp_range_dbl(sample, ddm) ;
		tx_to_sp_range_dbl:long_name = "Tx to specular point range" ;
		tx_to_sp_range_dbl:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		tx_to_sp_range_dbl:units = "meter" ;
		tx_to_sp_range_dbl:_FillValue = -9999. ;
		tx_to_sp_range_dbl:comment = "The distance between the GPS satellite and the specular point, in meters, at ddm_timestamp_utc." ;
	float ddm_nbrcs_uncorrected(sample, ddm) ;
		ddm_nbrcs_uncorrected:long_name = "Normalized BRCS Uncorrected" ;
		ddm_nbrcs_uncorrected:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddm_nbrcs_uncorrected:units = "1" ;
		ddm_nbrcs_uncorrected:_FillValue = -9999.f ;
		ddm_nbrcs_uncorrected:comment = "ddm_nbrcs before the ddm_nbrcs_scale_factor was applied to it" ;
	float time_between_interp_bb(sample, ddm) ;
		time_between_interp_bb:long_name = "Time between two interpolated blackbodys" ;
		time_between_interp_bb:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		time_between_interp_bb:units = "seconds" ;
		time_between_interp_bb:_FillValue = -9999.f ;
		time_between_interp_bb:comment = "The number of seconds between the two blackbodys that interpolated between to derive the blackbody countsthat are used used this sample" ;
	float gps_eirp_scale_factor(sample, ddm) ;
		gps_eirp_scale_factor:long_name = "GPS EIRP Scale Factor" ;
		gps_eirp_scale_factor:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		gps_eirp_scale_factor:units = "1" ;
		gps_eirp_scale_factor:_FillValue = -9999.f ;
		gps_eirp_scale_factor:comment = "Scale factor that was applied to gps_eirp_not_averaged" ;
	float gps_eirp_not_averaged_uncorrected(sample, ddm) ;
		gps_eirp_not_averaged_uncorrected:long_name = "GPS EIRP Not Averaged and Uncorrected" ;
		gps_eirp_not_averaged_uncorrected:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		gps_eirp_not_averaged_uncorrected:units = "1" ;
		gps_eirp_not_averaged_uncorrected:_FillValue = -9999.f ;
		gps_eirp_not_averaged_uncorrected:comment = "gps_eirp_not_averaged before the gps_eirp_scale_factor was applied to it and before averaging was applied." ;
	double sun_pos_ecef_x(sample) ;
		sun_pos_ecef_x:long_name = "Sun ECEF position X at DDM sample time" ;
		sun_pos_ecef_x:units = "meter" ;
		sun_pos_ecef_x:_FillValue = -9999. ;
		sun_pos_ecef_x:comment = "The X component of the sun WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	double sun_pos_ecef_y(sample) ;
		sun_pos_ecef_y:long_name = "Sun ECEF position Y at DDM sample time" ;
		sun_pos_ecef_y:units = "meter" ;
		sun_pos_ecef_y:_FillValue = -9999. ;
		sun_pos_ecef_y:comment = "The Y component of the sun WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	double sun_pos_ecef_z(sample) ;
		sun_pos_ecef_z:long_name = "Sun ECEF position Z at DDM sample time" ;
		sun_pos_ecef_z:units = "meter" ;
		sun_pos_ecef_z:_FillValue = -9999. ;
		sun_pos_ecef_z:comment = "The Z component of the sun WGS84 reference frame ECEF position, in meters, at ddm_timestamp_utc" ;
	double sun_pos_eci_x(sample) ;
		sun_pos_eci_x:long_name = "Sun ECI position X at DDM sample time" ;
		sun_pos_eci_x:units = "meter" ;
		sun_pos_eci_x:_FillValue = -9999. ;
		sun_pos_eci_x:comment = "The X component of the sun position in the Earth-centered inertial (ECI), in meters, at ddm_timestamp_utc" ;
	double sun_pos_eci_y(sample) ;
		sun_pos_eci_y:long_name = "Sun ECI position Y at DDM sample time" ;
		sun_pos_eci_y:units = "meter" ;
		sun_pos_eci_y:_FillValue = -9999. ;
		sun_pos_eci_y:comment = "The Y component of the sun position in the Earth-centered inertial (ECI), in meters, at ddm_timestamp_utc" ;
	double sun_pos_eci_z(sample) ;
		sun_pos_eci_z:long_name = "Sun ECI position Z at DDM sample time" ;
		sun_pos_eci_z:units = "meter" ;
		sun_pos_eci_z:_FillValue = -9999. ;
		sun_pos_eci_z:comment = "The Z component of the sun position in the Earth-centered inertial (ECI), in meters, at ddm_timestamp_utc" ;
	float beta_angle(sample) ;
		beta_angle:long_name = "CYGNSS Beta Angle" ;
		beta_angle:units = "degree" ;
		beta_angle:_FillValue = -9999.f ;
		beta_angle:comment = "The angle between the orbital plane of the CYGNSS satellite and the vector to the Sun" ;
	float zenith_radiator_temp(sample) ;
		zenith_radiator_temp:long_name = "Zenith Radiator Temperature" ;
		zenith_radiator_temp:units = "degree_Celsius" ;
		zenith_radiator_temp:_FillValue = -9999.f ;
		zenith_radiator_temp:comment = "Temperature observed by the zenith radiator" ;
	float nadir_radiator_temp(sample) ;
		nadir_radiator_temp:long_name = "Nadir Radiator Temperature" ;
		nadir_radiator_temp:units = "degree_Celsius" ;
		nadir_radiator_temp:_FillValue = -9999.f ;
		nadir_radiator_temp:comment = "Temperature observed by the nadir radiator" ;
	float starboard_side_radiator_temp(sample) ;
		starboard_side_radiator_temp:long_name = "Starboard Side Radiator Temperature" ;
		starboard_side_radiator_temp:units = "degree_Celsius" ;
		starboard_side_radiator_temp:_FillValue = -9999.f ;
		starboard_side_radiator_temp:comment = "Temperature observed by the starboard (+Y) side radiator" ;
	float port_side_radiator_temp(sample) ;
		port_side_radiator_temp:long_name = "Port Side Radiator Temperature" ;
		port_side_radiator_temp:units = "degree_Celsius" ;
		port_side_radiator_temp:_FillValue = -9999.f ;
		port_side_radiator_temp:comment = "Temperature observed by the port (-Y) side radiator" ;
	float sp_rx_gain_uncorrected(sample, ddm) ;
		sp_rx_gain_uncorrected:long_name = "SP Rx Antenna Gain from v2.1 Pattern" ;
		sp_rx_gain_uncorrected:units = "dBi" ;
		sp_rx_gain_uncorrected:_FillValue = -9999.f ;
		sp_rx_gain_uncorrected:comment = "The receive antenna gain in the direction of the specular point, in dBi, at ddm_timestamp_utc. This variable uses the v2.1 antenna pattern (v6)." ;
	float peak_power_uncorrected(sample, ddm) ;
		peak_power_uncorrected:long_name = "Peak Power without Correction" ;
		peak_power_uncorrected:units = "watt" ;
		peak_power_uncorrected:_FillValue = -9999.f ;
		peak_power_uncorrected:comment = "Peak analog power where the noise floor is not corrected by bin ratio." ;
	float ddm_noise_floor_change_percent(sample, ddm) ;
		ddm_noise_floor_change_percent:long_name = "DDM noise floor change percent" ;
		ddm_noise_floor_change_percent:units = "percent" ;
		ddm_noise_floor_change_percent:_FillValue = -9999.f ;
		ddm_noise_floor_change_percent:comment = "Percent change from previous DDM noise floor." ;
	float step_in_noise_floor_db(sample, ddm) ;
		step_in_noise_floor_db:long_name = "Step in the noise floor" ;
		step_in_noise_floor_db:units = "dB" ;
		step_in_noise_floor_db:_FillValue = -9999.f ;
		step_in_noise_floor_db:comment = "Change in the noise counts from the previous to the current noise floor." ;
	float lna_temp_change_rate(sample, ddm) ;
		lna_temp_change_rate:long_name = "LNA temperature change rate" ;
		lna_temp_change_rate:units = "1" ;
		lna_temp_change_rate:_FillValue = -9999.f ;
		lna_temp_change_rate:comment = "Rate of the change between the LNA temperature of the previous and next BB samples." ;
	float add_range_sp_normal(sample, ddm) ;
		add_range_sp_normal:long_name = "Additional range to the SP normal" ;
		add_range_sp_normal:units = "1" ;
		add_range_sp_normal:_FillValue = -9999.f ;
		add_range_sp_normal:comment = "Additional range to the SP normal." ;
	float outer_wing_panel_temp(sample) ;
		outer_wing_panel_temp:long_name = "Outer Wing Panel Temperature" ;
		outer_wing_panel_temp:units = "degree_Celsius" ;
		outer_wing_panel_temp:_FillValue = -9999.f ;
		outer_wing_panel_temp:comment = "Temperature observed by the S/A Wing1 (+Y outermost wing panel)" ;
	float inner_wing_panel_temp(sample) ;
		inner_wing_panel_temp:long_name = "Inner Wing Panel Temperature" ;
		inner_wing_panel_temp:units = "degree_Celsius" ;
		inner_wing_panel_temp:_FillValue = -9999.f ;
		inner_wing_panel_temp:comment = "Temperature observed by the S/A Wing2 (+Y middle wing panel)" ;
	float body_panel_temp(sample) ;
		body_panel_temp:long_name = "Body Panel Temperature" ;
		body_panel_temp:units = "degree_Celsius" ;
		body_panel_temp:_FillValue = -9999.f ;
		body_panel_temp:comment = "Temperature observed by the S/A Body3 (+Y body panel)" ;
	double first_moment_1(sample, ddm) ;
		first_moment_1:long_name = "First Moment 1 Scaled" ;
		first_moment_1:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		first_moment_1:units = "1" ;
		first_moment_1:_FillValue = -9999. ;
		first_moment_1:comment = "First moment 1 scaled" ;
	double first_moment_2(sample, ddm) ;
		first_moment_2:long_name = "First Moment 2 Scaled" ;
		first_moment_2:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		first_moment_2:units = "1" ;
		first_moment_2:_FillValue = -9999. ;
		first_moment_2:comment = "First moment 2 scaled" ;
	double first_moment_3(sample, ddm) ;
		first_moment_3:long_name = "First Moment 3 Scaled" ;
		first_moment_3:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		first_moment_3:units = "1" ;
		first_moment_3:_FillValue = -9999. ;
		first_moment_3:comment = "First moment 3 scaled" ;
	double second_moment(sample, ddm) ;
		second_moment:long_name = "Second Moment Scaled" ;
		second_moment:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		second_moment:units = "1" ;
		second_moment:_FillValue = -9999. ;
		second_moment:comment = "Second moment scaled" ;
	double third_moment(sample, ddm) ;
		third_moment:long_name = "Third Moment Scaled" ;
		third_moment:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		third_moment:units = "1" ;
		third_moment:_FillValue = -9999. ;
		third_moment:comment = "Third moment scaled" ;
	double fourth_moment(sample, ddm) ;
		fourth_moment:long_name = "Fourth Moment Scaled" ;
		fourth_moment:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		fourth_moment:units = "1" ;
		fourth_moment:_FillValue = -9999. ;
		fourth_moment:comment = "Fourth moment scaled" ;
	double first_moment_1_unscaled(sample, ddm) ;
		first_moment_1_unscaled:long_name = "First Moment 1 Unscaled" ;
		first_moment_1_unscaled:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		first_moment_1_unscaled:units = "1" ;
		first_moment_1_unscaled:_FillValue = -9999. ;
		first_moment_1_unscaled:comment = "First moment 1 Unscaled" ;
	double first_moment_2_unscaled(sample, ddm) ;
		first_moment_2_unscaled:long_name = "First Moment 2 Unscaled" ;
		first_moment_2_unscaled:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		first_moment_2_unscaled:units = "1" ;
		first_moment_2_unscaled:_FillValue = -9999. ;
		first_moment_2_unscaled:comment = "First moment 2 Unscaled" ;
	double first_moment_3_unscaled(sample, ddm) ;
		first_moment_3_unscaled:long_name = "First Moment 3 Unscaled" ;
		first_moment_3_unscaled:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		first_moment_3_unscaled:units = "1" ;
		first_moment_3_unscaled:_FillValue = -9999. ;
		first_moment_3_unscaled:comment = "First moment 3 Unscaled" ;
	double second_moment_unscaled(sample, ddm) ;
		second_moment_unscaled:long_name = "Second Moment Unscaled" ;
		second_moment_unscaled:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		second_moment_unscaled:units = "1" ;
		second_moment_unscaled:_FillValue = -9999. ;
		second_moment_unscaled:comment = "Second moment Unscaled" ;
	double third_moment_unscaled(sample, ddm) ;
		third_moment_unscaled:long_name = "Third Moment Unscaled" ;
		third_moment_unscaled:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		third_moment_unscaled:units = "1" ;
		third_moment_unscaled:_FillValue = -9999. ;
		third_moment_unscaled:comment = "Third moment Unscaled" ;
	double fourth_moment_unscaled(sample, ddm) ;
		fourth_moment_unscaled:long_name = "Fourth Moment Unscaled" ;
		fourth_moment_unscaled:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		fourth_moment_unscaled:units = "1" ;
		fourth_moment_unscaled:_FillValue = -9999. ;
		fourth_moment_unscaled:comment = "Fourth moment Unscaled" ;
	double first_moment_scale_factor(sample, ddm) ;
		first_moment_scale_factor:long_name = "First Moment 3 Scale Factor" ;
		first_moment_scale_factor:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		first_moment_scale_factor:units = "1" ;
		first_moment_scale_factor:_FillValue = -9999. ;
		first_moment_scale_factor:comment = "First moment 3 Scale Factor" ;
	double second_moment_scale_factor(sample, ddm) ;
		second_moment_scale_factor:long_name = "Second Moment Scale Factor" ;
		second_moment_scale_factor:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		second_moment_scale_factor:units = "1" ;
		second_moment_scale_factor:_FillValue = -9999. ;
		second_moment_scale_factor:comment = "Second moment Scale Factor" ;
	double third_moment_scale_factor(sample, ddm) ;
		third_moment_scale_factor:long_name = "Third Moment Scale Factor" ;
		third_moment_scale_factor:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		third_moment_scale_factor:units = "1" ;
		third_moment_scale_factor:_FillValue = -9999. ;
		third_moment_scale_factor:comment = "Third moment Scale Factor" ;
	double fourth_moment_scale_factor(sample, ddm) ;
		fourth_moment_scale_factor:long_name = "Fourth Moment Scale Factor" ;
		fourth_moment_scale_factor:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		fourth_moment_scale_factor:units = "1" ;
		fourth_moment_scale_factor:_FillValue = -9999. ;
		fourth_moment_scale_factor:comment = "Fourth moment Scale Factor" ;
	uint64 bb_sum_1(sample, ddm) ;
		bb_sum_1:long_name = "Blackbody sum 1" ;
		bb_sum_1:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_sum_1:units = "1" ;
		bb_sum_1:_FillValue = 0ULL ;
		bb_sum_1:comment = "Sum of the first 32x20 group for a blackbody sample. This will contain a fill value for non-blackbody samples. See UM document 148-0046 CYGNSS DDM Compression for more details." ;
	uint64 bb_sum_2(sample, ddm) ;
		bb_sum_2:long_name = "Blackbody sum 2" ;
		bb_sum_2:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_sum_2:units = "1" ;
		bb_sum_2:_FillValue = 0ULL ;
		bb_sum_2:comment = "Sum of the second 32x20 group for a blackbody sample. This will contain a fill value for non-blackbody samples. See UM document 148-0046 CYGNSS DDM Compression for more details." ;
	uint64 bb_sum_3(sample, ddm) ;
		bb_sum_3:long_name = "Blackbody sum 3" ;
		bb_sum_3:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_sum_3:units = "1" ;
		bb_sum_3:_FillValue = 0ULL ;
		bb_sum_3:comment = "Sum of the third 32x20 group for a blackbody sample. This will contain a fill value for non-blackbody samples. See UM document 148-0046 CYGNSS DDM Compression for more details." ;
	uint64 bb_sum_4(sample, ddm) ;
		bb_sum_4:long_name = "Blackbody sum 4" ;
		bb_sum_4:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		bb_sum_4:units = "1" ;
		bb_sum_4:_FillValue = 0ULL ;
		bb_sum_4:comment = "Sum of the fourth 32x20 group for a blackbody sample. This will contain a fill value for non-blackbody samples. See UM document 148-0046 CYGNSS DDM Compression for more details." ;
	float peak_power(sample, ddm) ;
		peak_power:long_name = "Peak power with nadir correction" ;
		peak_power:coordinates = "sp_lat sp_lon" ;
		peak_power:units = "watt" ;
		peak_power:_FillValue = -9999.f ;
		peak_power:comment = "Peak analog power where the signal and black body noise counts are corrected by bin ratio." ;
	float peak_raw_counts(sample, ddm) ;
		peak_raw_counts:long_name = "Peak raw counts" ;
		peak_raw_counts:coordinates = "sp_lat sp_lon" ;
		peak_raw_counts:units = "1" ;
		peak_raw_counts:_FillValue = -9999.f ;
		peak_raw_counts:comment = "Raw counts in the peak bin." ;
	float ddma_1(sample, ddm) ;
		ddma_1:long_name = "Raw count summation 1" ;
		ddma_1:coordinates = "sp_lat sp_lon" ;
		ddma_1:units = "1" ;
		ddma_1:_FillValue = -9999.f ;
		ddma_1:comment = "First variation of the raw count summation. Sums a fractional 3x5 around brcs_ddm_sp_bin_delay_row and brcs_ddm_sp_bin_dopp_col" ;
	float ddma_2(sample, ddm) ;
		ddma_2:long_name = "Raw count summation 2" ;
		ddma_2:coordinates = "sp_lat sp_lon" ;
		ddma_2:units = "1" ;
		ddma_2:_FillValue = -9999.f ;
		ddma_2:comment = "Second variation of the raw count summation. Sums a fractional 3x5 around brcs_ddm_sp_bin_delay_row and brcs_ddm_sp_bin_dopp_col+1" ;
	float ddma_3(sample, ddm) ;
		ddma_3:long_name = "Raw count summation 3" ;
		ddma_3:coordinates = "sp_lat sp_lon" ;
		ddma_3:units = "1" ;
		ddma_3:_FillValue = -9999.f ;
		ddma_3:comment = "Third variation of the raw count summation. Sums a  3x5 around the peak row and col" ;
	byte modis_land_cover(sample, ddm) ;
		modis_land_cover:long_name = "MODIS Land Cover classification" ;
		modis_land_cover:coordinates = "sp_lat sp_lon" ;
		modis_land_cover:_FillValue = -99b ;
		modis_land_cover:comment = "The MODIS Land Cover Classification type at the specular point latitude and longitude referenced from the MODIS Landcover 2012 Revision 1." ;
	float srtm_dem_alt(sample, ddm) ;
		srtm_dem_alt:long_name = "SRTM DEM altitude" ;
		srtm_dem_alt:coordinates = "sp_lat sp_lon" ;
		srtm_dem_alt:units = "meter" ;
		srtm_dem_alt:_FillValue = -9999.f ;
		srtm_dem_alt:comment = "Altitude at the specular point calculated using the 1km resolution SRTM DEM. Land observations only." ;
	float srtm_slope(sample, ddm) ;
		srtm_slope:long_name = "SRTM DEM slope" ;
		srtm_slope:coordinates = "sp_lat sp_lon" ;
		srtm_slope:units = "degree" ;
		srtm_slope:_FillValue = -9999.f ;
		srtm_slope:comment = "Surface slope at the specular point calculated using the 1km resolution SRTM DEM. Land observations only." ;
	byte sp_land_valid(sample, ddm) ;
		sp_land_valid:long_name = "Is land SP valid?" ;
		sp_land_valid:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_land_valid:_FillValue = -99b ;
		sp_land_valid:valid_range = 0, 1 ;
		sp_land_valid:comment = "Land specular point location estimate is valid with reasonable confidence, as per the calculation algorithm described in [4]. This flag is set to 1 (valid) if the sp_land_confidence value is either 3 or 4, and set to 0 (invalid) otherwise." ;
	byte sp_land_confidence(sample, ddm) ;
		sp_land_confidence:long_name = "Confidence in land specular point" ;
		sp_land_confidence:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_land_confidence:_FillValue = -99b ;
		sp_land_confidence:valid_range = 0, 3 ;
		sp_land_confidence:comment = "Meaning of each confidence value:\n0 =  Lowest confidence, land SP wrong\n1 =  Land SP probably wrong, but low SNR is the cause\n2 =  Land SP probably OK, despite low SNR\n3 =  Highest confidence, land SP OK" ;
	float ddmi_tracker_delay_center(sample, ddm) ;
		ddmi_tracker_delay_center:long_name = "DDMI Tracker Delay Center" ;
		ddmi_tracker_delay_center:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		ddmi_tracker_delay_center:_FillValue = -9999.f ;
		ddmi_tracker_delay_center:comment = "The navigation receiver clock drift contribution to the received signal Doppler frequency. Estimated during the 1Hz DMR navigation velocity solution as receiver clock bias rate, converted to frequency (Hz)." ;
	float rx_clk_doppler(sample, ddm) ;
		rx_clk_doppler:long_name = "Rx Clock Doppler" ;
		rx_clk_doppler:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		rx_clk_doppler:_FillValue = -9999.f ;
		rx_clk_doppler:comment = "The navigation receiver clock drift contribution to the received signal Doppler frequency. Estimated during the 1Hz DMR navigation velocity solution as receiver clock bias rate, converted to frequency (Hz)." ;
	byte pekel_sp_water_percentage(sample, ddm) ;
		pekel_sp_water_percentage:long_name = "Percentage of water at SP" ;
		pekel_sp_water_percentage:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		pekel_sp_water_percentage:_FillValue = -99b ;
		pekel_sp_water_percentage:units = "percent" ;
		pekel_sp_water_percentage:valid_range = 0, 100 ;
		pekel_sp_water_percentage:comment = "The interpolated lookup of the percentage of water on a high resolution (30m) Pekel water mask." ;
	byte pekel_sp_water_flag(sample, ddm) ;
		pekel_sp_water_flag:long_name = "Possible surface water at SP" ;
		pekel_sp_water_flag:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		pekel_sp_water_flag:_FillValue = -99b ;
		pekel_sp_water_flag:valid_range = 0, 1 ;
		pekel_sp_water_flag:comment = "If pekel_sp_water_percentage > 0, pekel_sp_water_flag = 1, else 0. Water presence estimated in the vicinity of the SP using high resolution (30m) Pekel water mask." ;
	byte pekel_sp_water_percentage_2km(sample, ddm) ;
		pekel_sp_water_percentage_2km:long_name = "Percentage of water within 2km of SP" ;
		pekel_sp_water_percentage_2km:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		pekel_sp_water_percentage_2km:_FillValue = -99b ;
		pekel_sp_water_percentage_2km:units = "percent" ;
		pekel_sp_water_percentage_2km:valid_range = 0, 100 ;
		pekel_sp_water_percentage_2km:comment = "The percentage of water within a 2km circular region centered at the SP. Water presence estimated in the vicinity of the SP using high resolution (30m) Pekel water mask." ;
	byte pekel_sp_water_flag_2km(sample, ddm) ;
		pekel_sp_water_flag_2km:long_name = "Water found within 2km of SP?" ;
		pekel_sp_water_flag_2km:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		pekel_sp_water_flag_2km:_FillValue = -99b ;
		pekel_sp_water_flag_2km:valid_range = 0, 1 ;
		pekel_sp_water_flag_2km:comment = "If pekel_sp_water_percentage_2km > 0, pekel_sp_water_flag_2km = 1, else 0. Water presence estimated in the vicinity of the SP using high resolution (30m) Pekel water mask." ;
	byte pekel_sp_water_percentage_5km(sample, ddm) ;
		pekel_sp_water_percentage_5km:long_name = "Percentage of water within 5km of SP" ;
		pekel_sp_water_percentage_5km:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		pekel_sp_water_percentage_5km:_FillValue = -99b ;
		pekel_sp_water_percentage_5km:units = "percent" ;
		pekel_sp_water_percentage_5km:valid_range = 0, 100 ;
		pekel_sp_water_percentage_5km:comment = "The percentage of water within a 5km circular region centered at the SP. Water presence estimated in the vicinity of the SP using high resolution (30m) Pekel water mask." ;
	byte pekel_sp_water_flag_5km(sample, ddm) ;
		pekel_sp_water_flag_5km:long_name = "Water found within 5km of SP?" ;
		pekel_sp_water_flag_5km:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		pekel_sp_water_flag_5km:_FillValue = -99b ;
		pekel_sp_water_flag_5km:valid_range = 0, 1 ;
		pekel_sp_water_flag_5km:comment = "If pekel_sp_water_percentage_5km > 0, pekel_sp_water_flag_5km = 1, else 0. Water presence estimated in the vicinity of the SP using high resolution (30m) Pekel water mask." ;
	byte pekel_sp_water_percentage_10km(sample, ddm) ;
		pekel_sp_water_percentage_10km:long_name = "Percentage of water within 10km of SP" ;
		pekel_sp_water_percentage_10km:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		pekel_sp_water_percentage_10km:_FillValue = -99b ;
		pekel_sp_water_percentage_10km:units = "percent" ;
		pekel_sp_water_percentage_10km:valid_range = 0, 100 ;
		pekel_sp_water_percentage_10km:comment = "The percentage of water within a 10km circular region centered at the SP. Water presence estimated in the vicinity of the SP using high resolution (30m) Pekel water mask." ;
	byte pekel_sp_water_flag_10km(sample, ddm) ;
		pekel_sp_water_flag_10km:long_name = "Water found within 10km of SP?" ;
		pekel_sp_water_flag_10km:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		pekel_sp_water_flag_10km:_FillValue = -99b ;
		pekel_sp_water_flag_10km:valid_range = 0, 1 ;
		pekel_sp_water_flag_10km:comment = "If pekel_sp_water_percentage_10km > 0, pekel_sp_water_flag_10km = 1, else 0. Water presence estimated in the vicinity of the SP using high resolution (30m) Pekel water mask." ;
	byte pekel_sp_water_local_map_5km(sample, ddm, lat_5km, lon_5km) ;
		pekel_sp_water_local_map_5km:long_name = "Local area map of the water mask" ;
		pekel_sp_water_local_map_5km:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		pekel_sp_water_local_map_5km:_FillValue = -99b ;
		pekel_sp_water_local_map_5km:valid_range = 0, 100 ;
		pekel_sp_water_local_map_5km:comment = "A 5 km x 5 km local area grid of Pekel percentage of surface water. Each cell of the local area map is 1km x 1km. The reported sp_lat, sp_lon, and sp_land_alt is the center cell of the local area map." ;
	byte sp_calc_method(sample, ddm) ;
		sp_calc_method:long_name = "Specular point calculation method" ;
		sp_calc_method:coordinates = "ddm_timestamp_utc sp_lat sp_lon" ;
		sp_calc_method:_FillValue = -99b ;
		sp_calc_method:valid_range = 0, 1 ;
		sp_calc_method:comment = "Method used for Specular Point Calcualtion:\n0 =  Ocean, uses DTU10 for altitude\n1 =  Land, uses SRTM for altitude\n" ;

// global attributes:
		:Conventions = "CF-1.6, ACDD-1.3, ISO-8601" ;
		:standard_name_vocabulary = "CF Standard Name Table v30" ;
		:project = "CYGNSS" ;
		:featureType = "trajectory" ;
		:summary = "CYGNSS is a NASA Earth Venture mission, managed by the Earth System Science Pathfinder Program. The mission consists of a constellation of eight small satellites. The eight observatories comprise a constellation that measures the ocean surface wind field with very high temporal resolution and spatial coverage, under all precipitating conditions, and over the full dynamic range of wind speeds experienced in a tropical cyclone. The CYGNSS observatories fly in 510 km circular orbits at a common inclination of 35°. Each observatory includes a Delay Doppler Mapping Instrument (DDMI) consisting of a modified GPS receiver capable of measuring surface scattering, a low gain zenith antenna for measurement of the direct GPS signal, and two high gain nadir antennas for measurement of the weaker scattered signal. Each DDMI is capable of measuring 4 simultaneous bi-static reflections, resulting in a total of 32 wind measurements per second by the full constellation." ;
		:program = "CYGNSS" ;
		:references = "[1] Ruf, C., P. Chang, M.P. Clarizia, S. Gleason, Z. Jelenak, J. Murray, M. Morris, S. Musko, D. Posselt, D. Provost, D. Starkenburg, V. Zavorotny, CYGNSS Handbook, Ann Arbor, MI, Michigan Pub., ISBN 978-1-60785-380-0, 154 pp, 1 Apr 2016. http://clasp-research.engin.umich.edu/missions/cygnss/reference/cygnss-mission/CYGNSS_Handbook_April2016.pdf [2] S. Gleason, C. S. Ruf, A. J. O’Brien and D. S. McKague, \'The CYGNSS Level 1 Calibration Algorithm and Error Analysis Based on On-Orbit Measurements,\' in IEEE Journal of Selected Topics in Applied Earth Observations and Remote Sensing, vol. 12, no. 1, pp. 37-49, Jan. 2019, doi: 10.1109/JSTARS.2018.2832981. [3] Gleason, S., O’Brien, A., Russel, A., Al-Khaldi, M. M., & Johnson, J. T. (2020). Geolocation, calibration and surface resolution of CYGNSS GNSS-R land observations. Remote Sensing, 12, 1317. doi:10.3390/rs12081317 [4] M. M. Al-Khaldi, J. T. Johnson, S. Gleason, E. Loria, A. J. O’Brien and Y. Yi, \'An Algorithm for Detecting Coherence in Cyclone Global Navigation Satellite System Mission Level-1 Delay-Doppler Maps,\' in IEEE Transactions on Geoscience and Remote Sensing, vol. 59, no. 5, pp. 4454-4463, May 2021, doi: 10.1109/TGRS.2020.3009784." ;
		:processing_level = "1" ;
		:comment = "DDMs are calibrated into Power (Watts) and Bistatic Radar Cross Section (m^2)" ;
		:creator_type = "institution" ;
		:institution = "University of Michigan Space Physics Research Lab (SPRL)" ;
		:creator_name = "CYGNSS Science Operations Center" ;
		:publisher_name = "PO.DAAC" ;
		:publisher_email = "podaac@podaac.jpl.nasa.gov" ;
		:publisher_url = "​http://podaac.jpl.nasa.gov" ;
		:sensor = "Delay Doppler Mapping Instrument (DDMI)" ;
		:source = "Delay Doppler maps (DDM) obtained from the DDMI aboard CYGNSS observatory constellation" ;
		:version_id = "0.3" ;
		:title = "CYGNSS Level 1 Science Data Record Version 0.3" ;
		:ShortName = "CYGNSS_L1_V0.3" ;
		:id = "PODAAC-CYGNS-L1X03" ;
		:netcdf_version_id = "4.3.3.1 of Dec 10 2015 16:44:18 $" ;
		:history = "Thu Oct  5 17:33:03 2023: ncks -O -a -dsample,0,172302,1 -L1 --cnk_dmn=sample,1000 --cnk_dmn=ddm,4 --cnk_dmn=delay,17 --cnk_dmn=doppler,11 --cnk_dmn=local_map_lat,41 --cnk_dmn=local_map_lon,41 /tmp/qt_temp.A13061 /tmp/qt_temp.t13061\n/data/ops/sand362/apps/src/produce-L1-files/produce-L1-files production_1@cygnss-data-1.engin.umich.edu 8 2023-05-31 00:00:00 2023-06-01 00:00:00 --allow-partial --out-dstore=sandbox@cygnss-data-1.engin.umich.edu" ;
		:platform = "Observatory Reference: cyg8 (C-SCID=49)" ;
		:l1_algorithm_version = "0.3" ;
		:l1_data_version = "6.3" ;
		:lna_data_version = "2" ;
		:nadir_ant_data_version = "20" ;
		:nadir_sidelobe_mask_version = "10" ;
		:zenith_ant_data_version = "13" ;
		:ant_temp_version = "1" ;
		:eff_scatter_2d_version = "4" ;
		:eff_scatter_3d_version = "13" ;
		:nbrcs_scatt_1d_version = "9" ;
		:gps_eirp_param_version = "7" ;
		:prn_sv_maps_version = "1" ;
		:land_mask_version = "1" ;
		:near_land_mask_version = "1" ;
		:very_near_land_mask_version = "1" ;
		:open_ocean_mask_version = "1" ;
		:ocean_mask_version = "1" ;
		:extremely_near_ocean_mask_version = "1" ;
		:very_near_ocean_mask_version = "1" ;
		:ddm_a2d_version = "1" ;
		:milky_way_version = "1" ;
		:fresnel_coeff_version = "1" ;
		:brcs_uncert_lut_version = "3" ;
		:ddma_les_sel_luts_version = "2" ;
		:mean_sea_surface_version = "1" ;
		:zenith_specular_ratio_gain_version = "23" ;
		:zenith_calibration_params_version = "17" ;
		:anomalous_sampling_periods_version = "1" ;
		:nadir_bin_ratio_signal_correction_version = "1" ;
		:nadir_bin_ratio_bb_correction_version = "1" ;
		:zenith_sig_i2_q2_correction_version = "5" ;
		:ddm_nbrcs_scale_factor_version = "14" ;
		:eirp_scale_factor_version = "2" ;
		:bin_ratio_qc_version = "3" ;
		:zenith_lna_gain_correction_version = "2" ;
		:per_bin_ant_version = "1" ;
		:modis_land_cover_version = "2" ;
		:srtm_dem_version = "1" ;
		:dtu_10_version = "2" ;
		:srtm_slope_version = "1" ;
		:surface_water_map_version = "3" ;
		:date_created = "2023-10-05T17:33:00Z" ;
		:date_issued = "2023-10-05T17:33:00Z" ;
		:geospatial_lat_min = "-42.392N" ;
		:geospatial_lat_max = "42.270N" ;
		:geospatial_lon_min = "0.000E" ;
		:geospatial_lon_max = "360.000E" ;
		:time_coverage_resolution = "P0DT0H0M1S" ;
		:time_coverage_start = "2023-05-31T00:00:00.499261625Z" ;
		:time_coverage_end = "2023-05-31T23:59:59.999261587Z" ;
		:time_coverage_duration = "P1DT0H0M0S" ;
		:NCO = "4.4.4" ;
}
